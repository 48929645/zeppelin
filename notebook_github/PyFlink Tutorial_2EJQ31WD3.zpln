{
  "paragraphs": [
    {
      "text": "%flink.conf\n\nFLINK_HOME /Users/jzhang/github/flink/build-target\nflink.execution.mode local\n\nflink.execution.remote.host localhost\nflink.execution.remote.port 8081\n\nzeppelin.flink.enableHive true\nzeppelin.flink.hive.database default\nzeppelin.flink.hive.version 2.3.4\nzeppelin.flink.planner blink\nzeppelin.pyflink.python /Users/jzhang/anaconda3/envs/python-3.6/bin/python\nHIVE_CONF_DIR /Users/jzhang/Java/lib/apache-hive-2.3.4-bin/conf\n\nPATH /Users/jzhang/anaconda3/envs/python-3.6/bin:/Users/jzhang/.rvm/gems/ruby-2.3.7/bin:/Users/jzhang/.rvm/gems/ruby-2.3.7@global/bin:/Users/jzhang/.rvm/rubies/ruby-2.3.7/bin:/Users/jzhang/.rvm/bin:/Users/jzhang/anaconda3/bin:/Users/jzhang/anaconda3/condabin:/usr/local/opt/thrift@0.9/bin:/usr/local/opt/bison/bin:/usr/local/opt/ruby/bin:/Library/Java/JavaVirtualMachines/jdk1.8.0_211.jdk/Contents/Home/bin:/Users/jzhang/Java/lib/hadoop-2.7.7/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/Users/jzhang/github/pha-all/arcanist/bin:/Users/jzhang/oss_cmd:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/Users/jzhang/Java/lib/apache-maven-3.6.1/bin:/Users/jzhang/bin:/Users/jzhang/anaconda3/bin:/Users/jzhang/github/pha-all/arcanist/bin\n\nHADOOP_CLASSPATH /Users/jzhang/Java/lib/hadoop-2.7.7/etc/hadoop:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/common/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/common/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/hdfs:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/hdfs/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/hdfs/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/yarn/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/yarn/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/mapreduce/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/mapreduce/*:/Users/jzhang/Java/lib/hadoop-2.7.7/etc/hadoop:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/common/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/common/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/hdfs:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/hdfs/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/hdfs/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/yarn/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/yarn/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/mapreduce/lib/*:/Users/jzhang/Java/lib/hadoop-2.7.7/share/hadoop/mapreduce/*:/Users/jzhang/Java/lib/hadoop-2.7.7/contrib/capacity-scheduler/*.jar:/Users/jzhang/Java/lib/hadoop-2.7.7/contrib/capacity-scheduler/*.jar\n\nrest.port 18081",
      "user": "admin",
      "dateUpdated": "2019-11-26 15:44:56.018",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "fontSize": 9.0,
        "editorHide": true,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1566380712452_-1576894735",
      "id": "paragraph_1566380712452_-1576894735",
      "dateCreated": "2019-08-21 17:45:12.452",
      "dateStarted": "2019-11-26 15:44:56.024",
      "dateFinished": "2019-11-26 15:44:56.026",
      "status": "FINISHED"
    },
    {
      "text": "%flink\n\n1+1",
      "user": "admin",
      "dateUpdated": "2019-11-26 15:44:57.039",
      "config": {
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "fontSize": 9.0,
        "editorHide": true,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mres0\u001b[0m: \u001b[1m\u001b[32mInt\u001b[0m \u003d 2\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1574069777727_-1498191426",
      "id": "paragraph_1574069777727_-1498191426",
      "dateCreated": "2019-11-18 17:36:17.732",
      "dateStarted": "2019-11-26 15:44:57.043",
      "dateFinished": "2019-11-26 15:45:09.362",
      "status": "FINISHED"
    },
    {
      "title": "PyFlink Batch",
      "text": "%flink.pyflink\n\ndata \u003d bt_env.from_elements([(\u0027Cell Phones\u0027, 100000), (\u0027Computers\u0027, 200000), (\u0027TV \u0026 Video\u0027, 150000)],\n                              DataTypes.ROW([DataTypes.FIELD(\"Category\", DataTypes.STRING()),\n                              DataTypes.FIELD(\"Total_Num\", DataTypes.INT())]))\n\nbt_env.register_table(\"ffa_test\", data)",
      "user": "admin",
      "dateUpdated": "2019-11-27 17:05:51.365",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mPy4JJavaError\u001b[0m                             Traceback (most recent call last)\n\u001b[0;32m\u003cipython-input-8-f6e382b14c70\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m\u001b[0m\n\u001b[1;32m      3\u001b[0m                               DataTypes.FIELD(\"Total_Num\", DataTypes.INT())]))\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----\u003e 5\u001b[0;31m \u001b[0mbt_env\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mregister_table\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"ffa_test\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\n\u001b[0;32m~/github/flink/build-target/opt/python/pyflink.zip/pyflink/table/table_environment.py\u001b[0m in \u001b[0;36mregister_table\u001b[0;34m(self, name, table)\u001b[0m\n\u001b[1;32m    137\u001b[0m         \"\"\"\n\u001b[1;32m    138\u001b[0m         \u001b[0mwarnings\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwarn\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Deprecated in 1.10. Use create_temporary_view instead.\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mDeprecationWarning\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 139\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_j_tenv\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mregisterTable\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtable\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_j_table\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    140\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    141\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mregister_table_source\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtable_source\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/var/folders/99/mfxjjdtj7x70rvwgkxpq4jm40000gn/T/zeppelin_ipython1302559934442420707/py4j-src-0.10.7.zip/py4j/java_gateway.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, *args)\u001b[0m\n\u001b[1;32m   1255\u001b[0m         \u001b[0manswer\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mgateway_client\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msend_command\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcommand\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1256\u001b[0m         return_value \u003d get_return_value(\n\u001b[0;32m-\u003e 1257\u001b[0;31m             answer, self.gateway_client, self.target_id, self.name)\n\u001b[0m\u001b[1;32m   1258\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1259\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0mtemp_arg\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mtemp_args\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/github/flink/build-target/opt/python/pyflink.zip/pyflink/util/exceptions.py\u001b[0m in \u001b[0;36mdeco\u001b[0;34m(*a, **kw)\u001b[0m\n\u001b[1;32m    145\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mdeco\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    146\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 147\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0ma\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkw\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    148\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mPy4JJavaError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    149\u001b[0m             \u001b[0ms\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjava_exception\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtoString\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m/var/folders/99/mfxjjdtj7x70rvwgkxpq4jm40000gn/T/zeppelin_ipython1302559934442420707/py4j-src-0.10.7.zip/py4j/protocol.py\u001b[0m in \u001b[0;36mget_return_value\u001b[0;34m(answer, gateway_client, target_id, name)\u001b[0m\n\u001b[1;32m    326\u001b[0m                 raise Py4JJavaError(\n\u001b[1;32m    327\u001b[0m                     \u001b[0;34m\"An error occurred while calling {0}{1}{2}.\\n\"\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 328\u001b[0;31m                     format(target_id, \".\", name), value)\n\u001b[0m\u001b[1;32m    329\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    330\u001b[0m                 raise Py4JError(\n\n\u001b[0;31mPy4JJavaError\u001b[0m: An error occurred while calling o2.registerTable.\n: org.apache.flink.table.api.ValidationException: Temporary table `hive`.`default`.`ffa_test` already exists\n\tat org.apache.flink.table.catalog.CatalogManager.lambda$createTemporaryTable$10(CatalogManager.java:472)\n\tat java.util.HashMap.compute(HashMap.java:1197)\n\tat org.apache.flink.table.catalog.CatalogManager.createTemporaryTable(CatalogManager.java:470)\n\tat org.apache.flink.table.api.internal.TableEnvironmentImpl.createTemporaryView(TableEnvironmentImpl.java:246)\n\tat org.apache.flink.table.api.internal.TableEnvironmentImpl.registerTable(TableEnvironmentImpl.java:227)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)\n\tat py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:357)\n\tat py4j.Gateway.invoke(Gateway.java:282)\n\tat py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)\n\tat py4j.commands.CallCommand.execute(CallCommand.java:79)\n\tat py4j.GatewayConnection.run(GatewayConnection.java:238)\n\tat java.lang.Thread.run(Thread.java:748)\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1566380730552_1860718628",
      "id": "paragraph_1566380730552_1860718628",
      "dateCreated": "2019-08-21 17:45:30.552",
      "dateStarted": "2019-11-27 17:05:51.467",
      "dateFinished": "2019-11-27 17:05:53.553",
      "status": "ERROR"
    },
    {
      "text": "%flink.bsql\n\nshow tables",
      "user": "admin",
      "dateUpdated": "2019-11-26 15:46:00.159",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "table": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "table\ndepartments\nemployees\nffa_test\nitems\nweb_log_small\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1574067078962_-1486980302",
      "id": "paragraph_1574067078962_-1486980302",
      "dateCreated": "2019-11-18 16:51:18.982",
      "dateStarted": "2019-11-26 15:46:00.164",
      "dateFinished": "2019-11-26 15:46:00.461",
      "status": "FINISHED"
    },
    {
      "title": "PyFlink Stream",
      "text": "%flink.bsql\n\nselect * from ffa_test",
      "user": "admin",
      "dateUpdated": "2019-11-27 17:06:01.523",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "title": false,
        "runOnSelectionChange": true,
        "checkEmpty": true,
        "results": {
          "0": {
            "graph": {
              "mode": "multiBarChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Category": "string",
                      "Total_Num": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "Category",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "Total_Num",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Category\tTotal_Num\nCell Phones\t100000\nComputers\t200000\nTV \u0026 Video\t150000\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1566380740590_29988750",
      "id": "paragraph_1566380740590_29988750",
      "dateCreated": "2019-08-21 17:45:40.590",
      "dateStarted": "2019-11-27 17:06:01.535",
      "dateFinished": "2019-11-27 17:06:03.663",
      "status": "FINISHED"
    },
    {
      "text": "%flink.pyflink\n\nfrom pyflink.table.udf import udf\nfrom pyflink.table.udf import ScalarFunction\n\nclass PythonUpper(ScalarFunction):\n  def eval(self, s):\n    return s.upper()\n\nbt_env.register_function(\"python_upper\", udf(PythonUpper(), DataTypes.STRING(), DataTypes.STRING()))",
      "user": "admin",
      "dateUpdated": "2019-11-26 15:46:45.801",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1566382544305_783514737",
      "id": "paragraph_1566382544305_783514737",
      "dateCreated": "2019-08-21 18:15:44.305",
      "dateStarted": "2019-11-26 15:46:45.806",
      "dateFinished": "2019-11-26 15:46:45.924",
      "status": "FINISHED"
    },
    {
      "text": "%flink.bsql(saveAs\u003ddf)\n\nselect python_upper(Category) as Category, Total_Num from ffa_test",
      "user": "admin",
      "dateUpdated": "2019-11-26 15:46:50.644",
      "config": {
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/sql",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "Category": "string",
                      "Total_Num": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "Category\tTotal_Num\nCELL PHONES\t100000\nCOMPUTERS\t200000\nTV \u0026 VIDEO\t150000\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1574067252729_-1332001493",
      "id": "paragraph_1574067252729_-1332001493",
      "dateCreated": "2019-11-18 16:54:12.729",
      "dateStarted": "2019-11-26 15:46:50.648",
      "dateFinished": "2019-11-26 15:46:59.457",
      "status": "FINISHED"
    },
    {
      "text": "%flink.pyflink\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\n\nimport pandas as pd\n\ndf \u003d z.getAsDataFrame(\u0027df\u0027)\ndf.plot.bar(x\u003d\u0027Category\u0027, y\u003d\u0027Total_Num\u0027, rot\u003d0)\n",
      "user": "admin",
      "dateUpdated": "2019-11-26 15:48:28.482",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u003cmatplotlib.axes._subplots.AxesSubplot at 0x118177470\u003e\n"
          },
          {
            "type": "IMG",
            "data": "\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1574067273577_-774474926",
      "id": "paragraph_1574067273577_-774474926",
      "dateCreated": "2019-11-18 16:54:33.581",
      "dateStarted": "2019-11-26 15:48:28.486",
      "dateFinished": "2019-11-26 15:48:29.804",
      "status": "FINISHED"
    },
    {
      "text": "%spark.r\n\ndf \u003c- z.getAsDataFrame(\u0027df\u0027)\n",
      "user": "admin",
      "dateUpdated": "2019-11-28 17:59:22.787",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1574067724982_-2047719582",
      "id": "paragraph_1574067724982_-2047719582",
      "dateCreated": "2019-11-18 17:02:04.982",
      "status": "READY"
    }
  ],
  "name": "PyFlink Tutorial",
  "id": "2EJQ31WD3",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-SNAPSHOT",
  "permissions": {},
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {},
  "path": "/PyFlink Tutorial"
}