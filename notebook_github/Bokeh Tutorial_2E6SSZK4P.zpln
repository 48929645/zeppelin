{
  "paragraphs": [
    {
      "text": "%python.conf\n\n\nzeppelin.python /Users/jzhang/anaconda3/bin/python\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:40.976",
      "config": {
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/text",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": []
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563185055042_-507385806",
      "id": "paragraph_1563185055042_-507385806",
      "dateCreated": "2019-07-15 18:04:15.042",
      "dateStarted": "2019-11-11 13:37:40.985",
      "dateFinished": "2019-11-11 13:37:40.987",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\nimport numpy as np\nimport pandas as pd\n\nindex \u003d pd.date_range(\u00271/1/2000\u0027, periods\u003d1000)\ndf \u003d pd.DataFrame(np.random.randn(1000, 4), index\u003dindex, columns\u003dlist(\u0027ABCD\u0027)).cumsum()\ndf\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:41.088",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "                    A          B          C          D\n2000-01-01   0.894172   0.281628   0.133878  -0.606774\n2000-01-02   0.604319  -0.028905  -0.090226   0.657366\n2000-01-03   0.601473  -1.545703  -0.503215   0.824484\n2000-01-04   0.714105  -2.438103  -1.515904   0.592856\n2000-01-05   1.514188  -1.413210  -1.467853   1.075911\n...               ...        ...        ...        ...\n2002-09-22  43.202434  15.585780  18.487139  35.785541\n2002-09-23  44.584782  15.634313  18.770992  35.996949\n2002-09-24  43.913830  15.292151  19.512132  35.394406\n2002-09-25  45.573494  14.727107  17.725331  35.891547\n2002-09-26  43.346848  15.508034  16.903339  37.011901\n\n[1000 rows x 4 columns]"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563519534525_713395855",
      "id": "paragraph_1563519534525_713395855",
      "dateCreated": "2019-07-19 14:58:54.525",
      "dateStarted": "2019-11-11 13:37:41.093",
      "dateFinished": "2019-11-11 13:37:46.323",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\n%matplotlib inline\n\ndf.plot();\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:46.356",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n"
          },
          {
            "type": "IMG",
            "data": "iVBORw0KGgoAAAANSUhEUgAAAXkAAAEECAYAAADNv0QiAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nOydd3gU5fbHP7M1vTeSIDW0UEIRRVCahasoINivYm8/u9cCVxSvXey9YcMuolgAARGlSyf0EkIK6T3Z3Wyb3x+zNbubbJINSWA+z+OT2Zl3Zt5E9syZ857zPYIoisjIyMjInJwo2nsCMjIyMjJth2zkZWRkZE5iZCMvIyMjcxIjG3kZGRmZkxjZyMvIyMicxMhGXkZGRuYkRtXeE3AlLi5O7N69e3tPQ0ZGRqZTsXXr1lJRFOO9HetQRr579+5s2bKlvachIyMj06kQBOGYr2NyuEZGRkbmJEY28jIyMjInMbKRl5GRkTmJ6VAxeW+YTCby8vIwGAztPZUmCQoKIjU1FbVa3d5TkZGRkQE6gZHPy8sjPDyc7t27IwhCe0/HJ6IoUlZWRl5eHj169Gjv6cjIyMgAnSBcYzAYiI2N7dAGHkAQBGJjYzvFG4eMjMypQ4c38kCHN/B2Oss8ZWRag2i1Ilos7T0NGT/pFEa+I/Djjz8iCAL79+9v76nIyLQreffcw/70geTedRf6zMz2no5ME8hG3k++/vprxowZwzfffNPeU5GRaVdqV/7h+Hn84UfaeTYyTSEbeT+ora1l3bp1zJ8/XzbyMqc05ooKt8/Go0ex6nTtNBsZf+jw2TWuPPnLHvYerw7oNQckR/DExemNjvnpp5+YNGkSffr0ISYmhm3btjFs2LCAzkNGpqNTs+pPSt5602O/PnM3oWeMbIcZyfiD7Mn7wddff82VV14JwJVXXsnXX3/dzjOSkTmxmCsqyLvzTur37gOlkojJk4mZeR0Apvz8dp6dTGN0Kk++KY+7LSgrK2PVqlXs3r0bQRCwWCwIgsCLL74oZ9PInDJkTb7Ysa2MiCDlpXmIRiPlny+QjXwHR/bkm2DhwoVcd911HDt2jOzsbHJzc+nRowdr165t76nJyJwwLGVlju2YmTMBEDQalLGxmIuL2mtaHYqXlx9g+Z7C9p6GB7KRb4Kvv/6aadOmue2bPn06X331VTvNSEbmxGKpqnL7rIyOdmyrYmMxl5Wf6Cl1OOrqzby56jC3Ltja3lPxoFOFa9qD1atXe+y75557TvxEZGTaCcO+fQCoEhMJv+B8IqdNdRyTjHxpe02tw7C/sMaxbTBZCFIrGx3/3eZckqOCGZMW19ZTk428jIxM4xj27AWgx08/onLx4gGUsbEYc3LaY1odiqJqp5xJvznLOPj0v9CofAdKHv5hFwDZz1/U5nOTwzUyMjJesdTWYiouxnBgP6qkJA8DD3ZPvszL2acWd365ze3ztfM3+Rxrtlgd26Iottmc7MhGXkZGxisHR57BkYnnYi4oRJ2S4nWMKi4WUa/HWld3gmfXcThcXOOxb9PRcvYXeq/pKa01OrafW9r2MimykZeROcUxFRRQMGcOolEyPqaiIsloW62IJhOm4iLUiQlez1XGxAJgLj91F18/WnPU6/7XVhzyut81tPPB31ltMidXZCMvI3OKU/DYHCq/X4hu2zasRiOHx47j6OVXOI6bjuWgSuri9VxVnGTkLadwyCa3QkfXmGDWPzrBbb+IZyimrLaeKW+vA+DCQUmAtFDblsgLrzIypzjmCskLFzQa6g9J3qfxyBG3MdFXX+31XEV4OACWGs+QxalCbrmeIalRJEcFc+e4XgzvFs07q49QXmfEahVRKKSiSVEUmf7uesd5vePDAKg2mJrMxmkNsifvB0qlkoyMDIYMGcKwYcNYv3590yfJyHQSrFVS7Fg0GKhbu87rGE2q95i8MkwyVNba2raZXAdHFEWKqg0kRwUD8PCkfkzsn0ioVsXm7ApmLXJKMT/4/U6yy5xibt3jQgGoMZjbdI6yJ+8HwcHB7NixA4Dff/+dWbNm8ddff7XzrGRkWk/NypUOWQJLdQ0lr77arPMdnvwpauS35VRSb7YSE6px23+kWPp7fLsllxdmDAZg0Tbp73zvxDRGdI/GZMuykY18B6O6uppoL6lkMjKdkby77nZsm44fb/b5CrsnX3NqGnl7+KWhkc+v1AOQGi15+K5pk/edm4YgCGzOlsJk1XpTm84xIEZeEIQo4CNgICACNwIHgG+B7kA2cLkoihU+LuEfSx+FwgB3okkaBP96vtEher2ejIwMDAYDBQUFrFq1KrBzkJFpY8rmz0c0W4i77VbHPkute9qjMVcqakqc9ShFzzm/E5qePX1eVxESAoLgFq4RLRaqly0jYtIkBGXbxZrbG5OL4dY2KHz6+PoR3PjpFuxp8OV1UubS3IsHOIQNo4LVAFTojLQlgYrJvw4sE0WxHzAE2Ac8CvwhimIa8Iftc6fEHq7Zv38/y5Yt47rrrjshRQwyMoGieN5LHqEY03EpfKCIiACg8mupIY6rUT/t4/l0++xTn9cVFAoUoaHU/bMJ/S6pirN8wQKOP/gfcm+/IyBzF0URa319QK4VSKpcPPCRPWLcjk3ol8jdE3pTVG3AYLIw/qXVACRFBjnGdLHF8Z/6dV+bzrPVnrwgCBHAOcD1AKIoGgGjIAhTgHG2YZ8Bq4HW9QprwuM+EYwaNYrS0lJKSkpISPCeOywj05Hw1XTbYDPKXd9/j7w77sRSWQmANi2N8PPOI3LKJYSedVaT11dGRKDfspXsy6/gtE8+Rr9tOwB1a9YgimKrJLlFq5WSV16h7KP59N21E4VG0/RJJ4hKnWTkX78ygy6RwR7H05MjMFtF9hVUU2eU/h+kRIU4jodpJfNbWlvvl95NSwmEJ98TKAE+EQRhuyAIHwmCEAokiqJYAGD7eVJYxP3792OxWIiNjW3vqcjI+IXeljTQkJoVKxHUaoL69CFk1JkABI8YjjopidQ33yD83HP9ur6p0Cmva8zLw1rvLPZpadaNbtt2RLOZo5dOp+yj+QCYCwpadK2WUPH991QuXNjomEpbmCU6xPuDp3eCtCi99ZgzSm2P0duJDpFCNiU1bfemEggjrwKGAe+KojgUqKMZoRlBEG4VBGGLIAhbSkpKAjCdwGOPyWdkZHDFFVfw2WefoTyJY40yJxd16zc4tl2zYMylpYSMOhNFaCjBg6QMEGVYePNvYHXGpgVBQNTpnfcocVeoLH7lVfLuvgfR5ZyG1B85wrGrr6bgiSeo3+8s+2/JwnBLEC0WCuc8TsFjczAcOOhzXIXNk4+yGeqGJEdJoRn7Aqu3sa9ckQHA0dK2k4UIhJHPA/JEUbQr8ixEMvpFgiB0AbD9LPZ2siiKH4iiOEIUxRHx8fEBmE7gsVgs7Nixgx07drBz504uuqjtleNkZAKF7p9/HNuV337r2LZUVKCKlmLJoWeeAYBVr6e5pLz2GpGXXipds6oKc6nTsBuznEVVtevWUfbBB9SsWEH5J5869lvr6xFNzvi28agkE1D1wyL332PzlmbPrSW4vn0cnTKFiu+/9zquKU8+RKMiOkTNjlwpDPbdbaM8QlfJtjDPayt9P0xaS6uNvCiKhUCuIAh9bbsmAnuBn4GZtn0zgcWtvZeMjIx/GA4cwLB/P5aqKnSbNxN7yy3S/v0HHAuZ5ooKRwMQbf/+JDz6CElPPNHse0VMuoAuzzwNajWWykrMRUWOWH7eXXejs8XojUecOi3F8+ZR+/ffVC9dyuGx48i++hpA8qKNx4553EMIDka3bRui0Uj+ww9Tf/hws+fpLw2rdyu/9x62scfkI3148gADUyIpqpZCMUkRQR7H+yaFo1EqKKtruwybQOXJ3w18KQiCBsgCbkB6gHwnCMJNQA5wWYDuJSMj0wRHp0iNPWJvuw2AoPR0tH36UP3LL9T+9RfWaqnK1W7kBUEg9vrrW3w/QRBQRkVSn3UUq05H8LBh1Nkqw43HjhEybCg1y5dL94yJwVJeTu6ttznOt1RWcmTyZIyHj3hcu9tXX1L24UeYCgowHDhI9c+/UL10Gf0zd7V4vo3RsBOWL3G2Sr0RlUIgXOvbjF5zxmmsOSS92USHen8Y3HR2Dz78OwuTxYpaGXgRgoBcURTFHbaQy2BRFKeKolghimKZKIoTRVFMs/08dWXqZGTaibL33wdAnZRIzA03ADgMPIAyJnCFfcrISEdoKCh9gGN/waxZGHNz0W3ZQsJD/6H3n97rTFwNfMSF/wIg9KyzCBk2DGV0NJaKCuoP2sIaJhPmitaV3TSk8odFHBw9huzpM6R7n3M2ivBwzOXe71NeZyIqRN1o9tCkgV0ID5IeAmE+HgZpCWGYrSJ/HSjBag18arasXSMjc5LhGt+2o0pOJmraVFLfetN9fwCrt5VRUVhralBGRxNy+kiChw51HKv+7TcAQkaORKHVNnmt0LPPAUBQS96vMjoKc1ERFd984xhT+e13AZs7QMW337qpaSY88ABhZ4/BXOi9OXdBld4t790Xy+8/h89vHOnzYdA7QaoavvnzLfScvYT1hwPbTlGWNZCROUkQRZHKhQvRnNbNbX/8Aw+gttV0NEyLtBdCBQJBkHzG6Gv/jTIslO5ff8W+fv0BqFsnhW7UqakA9Fq5EkVoCHXr1xPUrx9ZF01G0GiIu/sutD16EHr22dStWUP8A/cDoIqTkjIMmZkoY2OxlJVR8tprBA3oj7mklIL//pe+W7dQvWIFxmPHiL/7bgSFuw9rKipGEaRFGRnptt+q0yGazZhyc9H06oWg0aDt2RNtnz4EDxtO9ZKlGLOz0XTv7nZefoWenvGhTf5dukQGe82jt9PLpkZp5/YvtrJr7gVNXtdfZCMvI3OSYMzOpnDO447Pml69MB45QuTFk93Gdf3wQ3JtC7GK4BAChTIqCoCQYcMd+yIuuojq337DsGcPitBQxxi7qmWkLVOt/37Pqs+UV152bMdcczXFL7wAQNjZZ1P1008AUlzf5u3X/v03BY/Oku573nkEDZBCRqIoUvLa65S9/z7BQ4fS/euvpP1GI3UbN1L41NOYcnMBSPjPg0RNn+64r/0axpwcDyNfWGVgdO/WN+IO1apQKQTMtlBNtcFMSU098eFNv/H4gxyu8ZPCwkKuvPJKevXqxYABA7jwwgs5eLDt0p5kZJpLvUtOt6Z3L3r+vJi0DetRd3Fv+BE6ZjQxN91I3J13EjxoYMDun/DgAyTPm0fIGSMd+5KenAtI3rI6NbXF1a+CS6Vr+Pnnux+0hacqvvrasaveJZPHUl7uWJvQb9+O6fhxjDk5VC1ZQu6ttzkMPED4BZPcLq1OSgTAmO2e8WO2WKmpN/vMkW8u3942ii9vPoM7xvUC4J+jgVvClD15PxBFkWnTpjFz5ky+scUEd+zYQVFREX369Gnn2cnISNQfPODYVsXEIiiVXmPugiCQ+NBDAb+/pnt3D29XERoKSiVYLI5QTUuJvvpqzCXFhI0bS+/Vf3J43Hi347rNmx3bxx96iPCJE1CEhGCpdu+1enjCRJ/3UIa5h19UttqdomefJeLiySi0WhQhIY6UR7vIWGsZ3k36/5TRNYp3Vx8hp1zXxBn+Ixt5P/jzzz9Rq9Xcfvvtjn0ZGRntOCOZU4myTz5FFRtD5CWXeD1uqa1DERqCweXNUtlB5LAFQQCbdk5r3xqSHp/j2FYnJdHtiwUc+/e1bmNCTj/dYezrjxwhKD2d+oPee606UCjAakXdtavn/NVqFBERWKurOTRKyv3v/v13XLZUWhxtLEe+JYRqVUSFqMmvPEWN/Av/vMD+8sB2N+8X049HRjaum7Z7926GDx/e6BgZmbZAt2WLIxYdNGgQ2h493I6bioo5PHYsibNnYTyaTdi5EwkbO5bwib691ROOWg0mExEBrhQPGTGCLs88Q80ffxB3263UrF5N9GWXUfPHKoqeeQZTbi61q/+i9O23AQgbP57aP//0uE6/Pbup/esvggd6fwhFTplCxYIFjs91GzaSU54MgNkS+JTH3vFhrDtc5tY6sDXIMXkZmQ6KbvNmN081618XYq1zapxYams5PHYsANVLlmLKz0eT2pXoyy5DFRPjcb32ovuXX5A461E0Xjzl1hI1/VK6vvM2wUOGkHDvvaiTk4m6bAZCSAi169dTvWyZY2zszTd5nB97660IgkD4uHGo4rwvoqpi3f+WlnJnvLx/l8BlJ9m54vSuHC2tY8/x6qYH+0Gn8uSb8rjbivT0dBY2oUgnIxNo6jZs9Nin37WL0FGjAKj44gvHfkt1NaLB0Oq4d1sQPHgwwYMHn7D7KYKCCB01Cv2OHVh1zrBH0MCBCEFBiAYD4eefT9KTc/2qE4i58UZ027dT99ffAJR/+inClBe559y+DEyJbOLs5mPXpt9XWE3XmGC0KiXBmpYLIsqevB9MmDCB+vp6PvzwQ8e+zZs3y31eZdoUk5cinJwbbqTwmWcBKHntdcd+u6iX2kfD7VMNdUoyxsNHnPLEgoBCqyVtzd+kbVhP6huv+10IptBoSH3lFeLuugtjfBIAIwv3ccs5vjtmtYaoYCmTKKukjoz/reDhH1on3yAbeT8QBIEff/yRFStW0KtXL9LT05k7dy7JycntPTWZkxDRbKZgzuNULVpE0MCBJP3vSfpscSowVixY4NmZzPa5LUIinRF1g++mylYMpgwPb1GV79aSen7JuJCjT74BwIygCp8yBa0lzCaDsGy39ID6ZWfrJJY7VbimPUlOTua77wJbRi1z6mLV6zGXlaHxEl7R79hBpU3eVhEaSvTllwPQL3MXB0edhWg2O/RnEh55BP22bdSsWIGqSxevGSKnIsFDhji2Y2bOJGrG9EZGN83Tv+1jZ24l04elEhkSzYjQtmu+rVQIhGqUZJc5Q02rDxQzrm/L+i7JnryMTDuQc9PNHDn3PO+9gl3K8RNnz3JsC2o1cbffhmgwULPyD0DK40598w16Lf+dXsuWdqj2eO2J6xpA4qxH0aaltep6pbbOTT9sy6NCG4FQ0bZ6i+FB7qmZrt2lmots5GVk2gH9tm0AlL33HvWHDlH+xZfOY9sl/fUuzz9HUN++bufZ0xAL/vtfAJSRUnaH5rTT/BL+OlUQlEoSZz1KwkP/Ccj17EqSABXaMKwuQmZtgcXl4a9UCHjzBfxFDtfIyLQjJa+/QeUPizDl5RFxwfkYjx2jeN5LAAT16+cxXtWgebwygAJjJxsxM2c2PchPXJtsF4TGYszeiKW6GmVEBIYDB1AnJXkIn7UG156vUcFqynUtbyoie/IyMicYS617P0972f2hs89xy4tXBHsqFwoNegsHUkVSxjcGk8WxPemm6YhGI/qdu9Dv2cPRKVMpfPLJgN5v/swRju3oUA3ltbKRl5HpNJiLpXbHWpvukbXae9GLIqRphUjZkz8x6E0WLhmSzKoHxzLkLCneb9iz29FgpHrJ0oDeb2L/RL67bRS/3j2GLpFB5Fc2v/euHdnIy8icYIzHsgGImjGj0XGCDxlgbVoaypgYYm+5BWUHqmw9WamrN3OsTIdKKdAzPgxVQgKCWk3pu++5jWvYG7a1jOwRw8CUSKJDNGTmV7H+SMuaichG3g+USiUZGRmkp6czZMgQXnnlFaxWa3tPS6aTYti7FwSByEsvJf7eewCp1RxI3rsqSSq4UQR77zrU85ef6bN+HQkPPtBi6V4Z/3ljlSRwtj2nEgBBoUAZE4NYL8XNg4cNA6Dm99+9Z0u1kvPTE93u31zkhVc/CA4OZseOHQAUFxdz9dVXU1VVxZMBjsPJnBqY8o+jSkhAGRZK3B13EHvTTaBWo9u0CVVsLMqYGAx793nE32VOPKIo8u1mSW/+2WmDHPvNRUWO7ZR5L3J44rkUPDYHRUQEEQ317lvJRYO6cL9yBzUGc4vOlz35ZpKQkMAHH3zAW2+91SZPbZmTH3NxsVuWjKDRIAgCoWeeiTYtDVVsLGFnj2nHGcpUG0xcO38Tb646TKXOxP+mpDOqV6zjeKyts1bi7FmoU1KIvvpqAHSb/gn4XARBIDZUy7ZjFVha0Oi7U3nyhc8+S/2+wEoNa/v3I2n27Gad07NnT6xWK8XFxSQmJgZ0PjInP+biYrkytYMze1Emaw6VsuaQFAfvFuveTCThwQdIePABx+fEOY+h274dY05Om8ynQmeksNrAB39nObpH+YvsybcQ2YuXaQmi2YwxNxd1iqx71FExmq38uqvAbV+3mMYznQRBQHPaaZjayMhH2DpQ7T5e1exzO5Un31yPu63IyspCqVSSkNAyLQmZUxfj0aOIej3B6entPZVTnr8OllBeV8+0oe76QWsOlXiMTYn2rFloiOa0rtSsWoVosQR8PeXTG07nojfWEhHU/E5UsiffTEpKSrj99tu566675MwGmWZRu24ddevXA6A+7bR2no3MzI//4f5vd1JR515o9MO2PGJC3TWA1MqmTaW6a1cwmTAVeEpEe6Pql184etnlfkUF0pMj6d8lgtwW9H7tVJ58e6HX68nIyMBkMqFSqbj22mt54IEHmj5RRsaF3JtudmzbG0TLtA/1ZmcF6yfrjvLA+U6NoMIqA/27hLPgxjOY/t56Lh3mXyMWje3BbcrLRTQZUUZFecgai1YrotGIaDJx/KGHpX06HUJoqMf1GnJOWhwfrMlCZzQTovHfdMtG3g8sFkvTg2RkGsFqdPcWVbGxPkbKnAjWHHQWFm3IcoqNZeZVsS2nkqkZySgUAj/eOdrva9q1/I3Z2eRcfwPaAf3puWiR43jNqlXk3fl/0gcXpVFzWRkaP4x8akwIogi1huYZeTlcIyNzArCUOOO8iogIr7o0Mm2H1So6Qh0/bM3j5s+lJiwXpCdSUGVwjLv4rbUARIU0X7JZlZQEajXVy34HoH7vPrfjBY/NcZ2QY9Psp6JliE0kTWd0dzrLauu9DXcgG3kZmRNA3r33ObZ9adWcsmz/Eo6satNbfLQ2i7Nf/JNdeZU8+P1Ox/4ukcFU6Z0NQJQKaZ1tup8hGlcEpRJ1fDy6jVJvXlVyF7fj2l7eUx/NJZ4Lvd4I0Xga+ZKaeoY/vbLR82QjLyPTxohGI4bdux2f4++7r5HRpyCL74QF09r0FpuypCYfl7y1zrEvPlxLRLCaGoPZUWTUNTqYi4ckMyi1ZbLBirAwx7b5eAG1a9Zy9NLpGLOzsdTVEjRkMCEjJIXJuDvvBMCYddSva9ubeetNzsrXQpe3EJ9z8nv27UhnyUnvLPOUObHUH80GIGnuXPpu3ULc7be174Q6EjUumSi/BabBhyiKiKJIlc5EZl4Vc3/e4zU7ZsX95xBpyz+vMUjefFmdkdjQlnfXsnvlwRkZAOTecguGvXup/OEHzMUlBPXpi6ZHDwCE4CDUycnUHzrk17XtcXi90RnqmbN4t6/hDjq8kQ8KCqKsrKzDG1BRFCkrKyMoyLuolMypi2F3JgAhp49A4ccC2ynFpved25s/bPXlqg0mesxawhcbjzH86RVc/NZaPl2fzbI9zofJ45MHcPS5C4kK0RBlM/KVOhMHCmuoMZjpHtu0xLMvLBVSm77kl+ahdWn6UvbhR1hKS1ElJBB5qfTWEtSvP9q0tGYYecmT/2TdUap00kNpR27TomUdPrsmNTWVvLw8SvyMW7UnQUFBpHppzCxzaqPbvh1lZKTDg5Nxoa4EFCoQFGAxQmUORLW8hmDyG9LC6ZzFe3yOuXJkV0eNS5dIySk7Xqlnxb4iNCoFUzJSWnz/yBnTqVr4A+qUFGKuvdbRptGOKj6ekKFD6bt1C4rQUHT/bKJu/XpEk4m6jZuoXLiQlFdfQVB4+t/2cM0f+4u56+ttLLjpDL/m1OGNvFqtpof85ZDpxOh37CA4I8PrF/eUp64U4vvDtHfhvTGQs7FVRj6nkWKhC9ITmXfZELf0w642uYJfdhWw93gVvePDiG5FuKbL//5H0uOP2x4intEHVaJUJW9/o9OmpSGaTBhzcsi1iZ7VHzzotfVjjEvGz5pDpQ5vvinkf3UynRrRbPbIThAtFsQOovcviiKmnFw0PjIrTnnqSiA0TjL0qmA4vr3Fl2pKofHFGUM8ZAGSo6RU1q//yWFnXhVh2tb5vYJCgUIjGePwiRMJGzfOTYyuYYaNNi0NwC1kU3/ggNdrN3z4DPnfcgCmZjSugyQbeZlOTfGrr3Lo7HOo+vlnx77D4yeQddHkdpyVE2t1NaLRiCqhfStcl+0uZMwLq3huyb6mB7eGH26RUiIBls2GXd83Pr6uBMISQKmCpEFwfEeLb23Pg1crPeVGVArBscjqilIhoFE5zWBFKxpme1w7Koqu771Ljx9/dMhYqBuEczU9e4JCQf3Bg459ld8vxGrwnjXz9NSBbp97xofy0mVDGp2HbORlOjXl8z8G4PjDjzg8enNxMcaj/qWltTX2fq7tLWNw+xdbyavQ8/7fWW13E1GEzO+klMjaYtj4Niy6GXTlvs+pK4VQ298meSgU7ARzywxtZr6k0Dg4NQqAy4Y7DWrvhDCv54BzQROkhdtAowwLpddvv5K2fp1HyE6h1aJNS6P0nXcd+3RbtlD84jyv1/r3md3InHs+4/pKf7OxfeJRNaGrIxt5mU6LfudOt8+GAwep/n15O83GO6YCSbJWbWvp1164aul9uzmHH7bmBfYGpYegOt/5OW+Lc9tXoZOxDkx1UrgGoPe50ufsv1s0hd35VWiUCt69ZhgvzhjMizMGs+Cmkcz6Vz8+vWGkz/P6JoY7tuvNbRPmE9RqVD768cbedKPHPv0e36mR4UFq5s88nScuHuCXtnzAFl4FQVACW4B8URQnC4LQA/gGiAG2AdeKohi4dyGZU57qJUvdPufefLOPke2H/Y1C07Nnu83BbLGiEAS6xYaQVVrHIz9IKZ3ThqagUARISfWtEe6fS1zCQpm2kM2AqVJYxk6dTT/G7skn2uSXK3NbNIXM/Cr6dQknISKIy0dIcfCz0+I5O63xt6jXrxzKnMW7WbG3iHrTiV/LCb/gAnj4Ebd9gqpxSWGlQuCG0f4lpATSk78XcA34vQC8KopiGlAB3BTAe8mc4lhqaqj45gZ2hcwAACAASURBVBvCxo2jz5bNXseIpsC/evui7NNPybnJ8yFjPHYMRUSEhxrhiWT1gRIsVpELBrq/TeRV6Ft/casV9vzkub9gJ0SkSob94DL44SbY9Y37GHshVKitL4Pdo9eV0lxEUWR3fhUDU5pfqZoUGcQbVw6VruMlI6atUWi19Fj0A7F33O7YZ61ufnMQn9cPxEUEQUgFLgI+sn0WgAnAQtuQz4CpgbiXjAyAKT8fsb6eyGnTUIaFkfDQQ45jKltoxFJTc8LmU/z8C9StW4d+xw6OXDQZ0/HjAJhLStt90XXdkVKC1UquP6u72/6AxJ9XPQXfz/Tcv3cxxPeFETc49wku5iZvK+z/VdqO7ib9VGlBEw51ZVJ8vxkUVddTbTDTv0tEM38BiWCNkjvG9eLbW0e16PzWEjRgAAn33ovSFtIxl/onWuYPgfLkXwMeBuzvOrFApSiKdpGFPKDlFQYyMg2wVEqVfsooaZEt9qYb6bNxAzE33kjMv6+xjQmcN9QYruma2VdehfHIEY7Pmo1Vr8dw4ACq2LgTMg9f7CuoZkByBIkR7tXYtfVmH2f4iSjC2lfc901zqWBN6A/dxkiGG8Bie6hYLfDRBFj/hvQ50qXfrUIBm96FZ5LgB//DbwVV0ltJcmTLK84fmdSPIV2jWnx+IEhbt5bYO27HUlFB7Zq1Ablmq428IAiTgWJRFLe67vYy1OujWRCEWwVB2CIIwpbOUNUq0zFoaOTt24kPP4S2r9QAwlJVSe3ff2OprQ3ovRtKbFR+55kmqNu0iQNDh2HKyUEZ036hmiMltWzMKic+TAvA6N5OHftaQzOMfO5mmBsJJbYcbpMe/nrBc9ygy0Ep3Yv4vlIM/r5d0mdjrZQ5s+tb6XN0dxg3GzQuMgJDrpZ+mg3OWL4fFFVLcrsNH2SdDUEQHJlYubfcQtmnn7b6jTQQnvxo4BJBELKRFlonIHn2UYIg2FdZUoHj3k4WRfEDURRHiKI4Il7uliPjwsGiGt5adQiTxXMxzJgrLc65Gnk7ykgpLnvsqqvJvfU2Sl5/w+97Fr/6Grl33OnzuG7zZvb3H4Bh717HPv0uyYiFjR9P4pzHPM5pL72akpp6Jr78F+CsBJ03YwgT+0kx8IaevMUqsivPixaK1Qrzz5W2d30n/Vw5F1Y/5z7u3z9InnhcH+lzim0xVmsLodTXwrJH4ac7pM9XfQvj3BccmdTgmjVFTf6eAEXVUl55ZzfyAKoY54O4+PkXKHr6mVZdr9VGXhTFWaIopoqi2B24ElgliuI1wJ/ADNuwmcDi1t5L5tTi47VHeWn5QZbu9uyZWbvyDxShoai8eMnKiAZxWVsFbP2RI4hNdPkqe/99av/806cgnm6LlBpYtXgxVb/8ij4zE3NZKdoB/en67jvEXHONxzkJAZIW1hnNXPnBBlbs9c/wPb90v2N7SFfpwZccFcxz0wcBUGM38uteh4U3Mn9tFpe8tY4t2S557aIIeS4L2/U2LfyCXZ437G17EEx9By55CxIHSJ+VKqma1VgD+5xFa8R4yThq2Dd551dN/p4gGXmVQmiVgmRHoaHj4m9TEV+0ZZ78I8ADgiAcRorRz2/De8mchBhtHvxOF6W9+sOHKXnnHYw5OYT/axKC2jPVTNUgJ10IDqLq55/JumgyFd9+69e9Dbu9C1wpwqUHiD5zN8cfeojsyy7HUlqGKs4Zd09++SXHtqZXL7djreFYmY6NWeXc8vkWDKamW1Jq1c6v9+OT0x3b9tL+anuzjBWPw+4f2LnsUwB25dnWMkQR3hwGH5/vvKheUllE4/J2Mvpe+I+LkmKXwTDs2gaTCYP1b0oVrgD9JoOqCYOs1EK2Tf+9pkjK2PFBWWUVbwS9j6Jkr88xnQVVXIPWkH40EW+MgBp5URRXi6I42badJYriSFEUe4uieJkoio33qJKRaUC1XvI0DxY5Y5LH//tfSt94E0tFBZoU72v5iqAg0tauocvzz6GMi8NaW+fMdjnuNWroPNcW6qlessTrcWutNBf9tm2OfYY9e1DFOUONoaNGETZ2LImPz6H7l194XENnNDNr0S6/Gj64UukiSDV7Uabf5619ZLxDwRAgSK0kKkTtWKwsVUvaJ0MURwAorqmXDHxNIZTbKmS1EZA8DHQ2r9JYJ/2c9Dyfh93IzoomDLbduMf3h9nH4fIFvsdetxgGToeuI6U4PsDbp8P754DRuwBZWuESLrSuho3vND6PToC2d2+SnnzS8dmYnd2q68kVrzIdDlEU+X5LLoXVkhHKq9AjiiKl772HYaczTKBK6uLrEqji4oiaOhVlaCjW2lqsVZJ3WvbRfEcPTm8ISskYGjIzvebZW6q9L4K5euuqmBi6vv8eMVdf7XXNYOuxCr7+J5c7vpRyFbJL67jmo41kldTyybqj1PnIeqnSO2sJD5c0vphssYpk5lWRlhBGarSnPnqoRsUXG3NY+NtS4kzSgy9WkEIxYeV74H+xGH+8y3lCcLSUx2438oYq6DcZ8YzbeXzxHqa8va7hLbxz6QfSW0Bjipw9x8GMj0EbLsXx7fcDMHhZM9BXcHPla9K2svOHawAip05xbJuO5WDV+65psIcQfSEbeZkOx58Hinlo4S5250tG52hpHVmffknJa6+7jQvq26fJaynCwtBnZlKzerVjX76PGLkoio5MBt2WLRy7zjP/21pjM4Rjx9Ll2Wcd++0Ssv5gz2qxe+ZvrjrMusNlzFqUyZO/7OX1P6TQx4IN2W7x90NFksEbnBrZZLjmjT8OkZlf5XXRGmBULykkMG6zswBnunINy0LmcHbO2yBa0Bx16R0qihASCzpbuMZQBUGRHk2lfeLIuPGU0PWJJkyK47sqiuptRn7rZ7B8jqRa6SqCVt34m1pnQaHV0m/fXoJHDAca7wNb/MqrjV8roDOTOaWpqDPy2E+ZlDbRPb4p7GEagPMGJNKrMh/jC84Mg6BzxqJOSUHbu3eT11LFx2PKycF0LMfnGHNZGaXvvSeJiZlMRFx4ISDpwDfEVFiEtn9/ur7/HuHnnevYHzVjhsdYX1TYjLu9abTK9nPTUWnBs1pv4tddx5mzeA+3fC55aXqjhZdXSEqF3WJD0egKJREwHyy3PRy0KqXX489OG8T1Z6YQh7tn3M96hCH1zmzofdau/G0ZBOc/ZTPyNk9eX4FFE8FnG7L9+6Vv/VNajG0qDu+KNkzy5Jc+7Ny33Rb++vU+Kc/+g3Hs2bYGgKqgFKjK93KhzokgCMTdJrWKbFgcJYoiZfPnYyouxpTXuA6RbORlWkRtvZnP1me7aXivP1LGFxtzeHihl8yLZuCaYDElI5kEu/cI3DLxYcbHXIzhs4UImqYNRvy99xBy+uke+8vmz3dk2lR+/z0lr71O3p3/B0DktKnE3XUXiCKi0RkisRqN6LZuRWvTobE3bQ6fNAmFVuv372eXs7Ub94aVpyqlwD82g2+Xzc0uk2LgUzOSSYrQ8qvpVsSGejEuhGkl4/7y5d5laDV5G5i7Y6zjsz7CM9PlcfONzDQ+ynWmWZA+VQrZmOowHFoNpjqWHoMXl3nXPvcgMd1zMbYpNGGSxIFrW8CNb0PWXyA6vfuggs3kiXGUJ41xF0k7CbCHAc2l7p688ehRiue9xOFzxjqUTn0hG3mZFjFrUSZP/LyHdYedOiOVtphxXoXv7jzNZUK/BBJdpGortZJhfWWlf30xg/r3p9uCz+mzZTORU5xxzuJ5L5F18SXUbdiA6bikFGnYI2XUaHv3RhUrlZeXf/6545yyDz5E1OkIGz8ekDytPpv/IWXei836nexvOiaLlc/WZ3ukiB4orMFkkR6eMaEaNmWVcdWHGwG4/PSu9LVIC6SCwXdFb5XexKT0JN9aLjnrndu3ryP4vq1wzUL+q7zfsftz87kUI6WoGs1WyZMHgr6U/o7Lc72/JQQMrQ+JgkW3usXeeykKKBUjCYo7DfTlPhdnOyNOI++u52Otrvb7GrKRl2k2ueU6ftkpxT4/+DuLD20a5eW1diOvb1XJvKsSYIhGRYpBMvIruw6nVi118lm1v5isklq+/ifHrybvyrAwujz1P5JfeN6xz5iVRc4NNzoyb8AmCZuU5PD+q37+BZDEzmqWLyd4xHAiJ1/kvG54uNc0zsbYmGULyxjMPPGzZ6rm5uwKKuqkv2VZrZGXlh9wxO+jgjVconUutPnqgFVeZ2y8jV25TW9/0vOQNFBaCE07j7BBUqgqT5SMi9bWUKNCZyTHEOx2iULRvUYht5HWey3CtQ3grHy45E1pu7ZQ6gc7YY7jcD1qYpJsqow1BYGdRzuijI4GQcDSwMiby52Oj6Z343LDspGXaTYfrXE2nlh7uJRnluyjSm/it0zpy6UzWtwLappJndH9AZGir+BIRDIvD7/KLZYz4eW/mLUok205FQ0v4cb3W3L5alMOgkbj5s3bcWu3JggIgoC2d2+iLr8cY24uFd9+R+5tt1N/8CAhGRkt/r0ANmWVsa9A8sJKapxrF6d3j2ZI1yjG25pBLNsjefdmq8jmbOfvFxWiRlPtXF8oKfE0aFarSIXO5LswqOIY7F4EPcfDmXe4HXr4ktPZO2UJ1whS5enIHtIbzcasMt7d5b7Iul/s6vbZ/nsFjPBE6eeAKVJ8fth17Bn+lOOwGOM0bjGTn0Qba5tPVYC18tsRQaVCGRODucTdyFtsRr73qj/o9euvjV5DNvIyzca1XZqdB77dwf7CGjJsAk+/7Wq5N+WaQmipqaFP6VEKwqRQwbn9E3mqQQs0u2fsi4cW7mL2j5kcLZXi2t1/kMRR7f01zSUljiyG4GHDHOep4mIR9XoKn3iCuvVSeCPqssta/HuB1IBZEOC+c9Mc+96/djhf3nwmi/9vNFec3rWRsyUjT6XTyBcXuf+d8yv1XPTmWixW0bsnb7XC64PBrIfTzvQ4rFQIDBg6mjduOp+RPWJ4+bIhhGiU3PvNDhblOFMx60U11YRx/oBEHv2XlDFTVmckq6SW3rOXsOd4AMThuo2Bcx6CC6XismqDiac3OGsLJv4Wyq5u1/OO+RLUPc+GCFvdRHU+rHoGXkkHQ4AfPO2AKi7Oo+rVeCwH1Gq/Cu1kIy/TbIqq6wnXqugW6/zS/7G/GEGAb26VDMf3W/NYvsdTjsAfymyhih9uP5OjU6YSWq/j1x5ncfOYHnw0cwSDGsSZ5/1+gJKaeu77ZjsHCt3z2F1TDa/8YAP1ZgvB6en037+PlFdedhzT9uhJ1w8/JOVVp6piQ2GzpCceR9OtW4t+JzsVOiMxIRqiXPqNDu0a5XhwxoZ5X8D948GxvDxjECHL7of8LVi00sO0stT5N/77YAmjn1/l8KiHneZFUbHU2UuU/pf4nOeQrlF8d9soEiKCGGCT761Hw6+WM6QB6iBmjurGa1dmOCSMS2vqWbW/GLNVZP7aALRfVKpgwmNSD1ikcNARq1S4tcxyOlkVJm4+fjHzLFcSG6ZxGvmqfPj7RajOg7LDrZ9HO6OKi3OLyVtqaij78EO0PXv6lXwgG3mZZlOpN9EzIYxgtbTwlhAuGaaUqGCC1Ep+uWsMQIv7iWaV1JGeHEF6fakjXj795qncY/N+u0YHe5zzwrL9/LTjOG/84b4ga88tn5SeRFF1PX0fW8ZuWy9QVWKiY5wiPJyws8e4NfeIuW6mW5qkKrH1Lfz0RgvBGiUT+zvvHR/uNOy94sPoERfK3IsHsOjOswC4ID2RXvFhTD9NB9ukhWAhyGZ4S5zG9N3VRxzbFw9JdrxVuWHPVJn5q1NbpgnmuTSKPthbalWnseh4cspAQjQqgtRKokPUZJfp0Nvy5gMenwfu/no7xUQzrv5l7jTdC0jVuad3jyE8SA3qIKnLVLVLuKbyWMDncaKRjLwzu+b4f6TeCf4K38lGXqbZVOlNRAarHYp/kTavNDpE8ioGpUqe9tZjFXR/9Dfu/HKrxzXMFis1PppWHC2to0dcqCODIHLaNK4b1d2hueLq7Y7pLb2u/rFPygsvr3OmPIqiyFO/SVomd47vJYU6gA/XZGGyWFGEhzsqL5URzj6fdjSpKaS++abjszol2e34mkMlfL4h2+PtwRcLNh5j9cESgtVKusaEkP38RWQ/fxGCyzpDTKiGP/8zjutH92DYadF8duNI3rzKFkKqc37RFbYuShP3PUbJ+gVc9MYajttkCi4clMSbVw11uy4A9TWw+SNJ3737GL/mDNAjzmlMrpo8CQAhZbjbmNG941h3uJTdtjDNoeLAyjuD9PAHyBa7YHUxXUNd31giU91j8pW+6yM6C6r4OCwlpY4EA52tfkO0+JfcIBv5Ds6W7HK3XPSGmC1WylpZfNRcqnRGIoPV3HduGiEaJRNs0rX2nG6AIBdxrCWZheSUuXt2cxbvZtDc5R4Vmf8cLSenXEfPuFAsNZKhiL76ao85vH5lBrMv7Mf866VccXuBkeuibUGVgX+OlhMepGJQSiTb55yHRqVg8Y7j3PL5Fu78cpujmlLTvbvP3zfh0UeIuPBCtH3cK2yvnf8Pjy/ewwWv/e14O2iMOT/tprzOSIjG/9TDsX3inWsgtS7qk+FJzFdMB6Bm2dPsOV7NsTIdkcFqRys7NyqyYeO70vb42Z5qj00wopv0htMlNgpu/Quudhd66xkXSmG1gT/3Sw+iGoPZr6wnf/FW4RumlZTMM1JdjHxEijNzCE4KI6+MiUU0mbDaqrFFnfRdsktqN4Vs5Dsw6w+XMuO9Dby16jD1Zu/l488s2cfwp1eiM7ayy4+f5JTpyC7ToVIIDD0tmr3/m0Sardu9ykWP5I8Hx7mdtz3XPQPmm82SHrxd8XDWol0s2JDNYz9JwluJkUEOMTBleJjHPKZkpHDrOb3QqpSOsBG4N8Kwe/XzZgxBsGXN2DsHrT5QwtLdhYjJqQBsVMRRXONdMCz2+utJeeVlN8+44cPJvqjrC9fxwc0w8m78YGuTPHA6XDiP16yX86n5fLoLRYQiefFVehMqb6qFrw+BP21Vw4npnsebYMFNZ7Dj8fOkD8kZEBLjdjze9lZntFg5o0cMFqtIvTlwTbH7zVkGwEWDnHpFr12Rwbn9Exjfz0VSIrIrlDvDVieFkbeFEIvnzaNm1Z+oU6V/s12eetqv82Uj34Gxi1C9uvIgM97d4HWMPYuluYqGLeXVldLCXb8kZ3gjIkjyqJKjnA0bUqKCOfLshex/ahIqheAR0tAqoF95NrofF1FaW8/X/+QyZ/EeR8hnxvBUh46MItwzlOKK3sXLq3HJzLHnlkeHOBc5P7txpNu55fc/hubpF7h1VREjn/nDkZ/eFMU17m9PRdUGrI28cble90hJ4w8Er3zmskh66YcQmcr1Z/VgtTUDhSAySCF5r3FhfsgGhDd/bSFYoyQqxPe1E1zWFYbbvP5Wtxe04RrWm+nSp/bcAYl8NPN0glwe8kSmOrfVoVK6aCdHGSV57JXfLyT/vvsw5uQQOf1S1H7qJclGvoNSXG3gNZeqzsz8Kq/evP3Vv+AEGfn8Cj3pyRHccrazDP6s3nHMvrCfR2qjUiEQpFbSMz7UzcgfP3qcT355glf/fou4917i3WW7Hcc2HS1nZI8YtCqlo8VfU0b+0mFOyWFXT94uH+CaStgtNpQ7xjnzq/+9rpaJW5xGYpafEr7HGnju76w+woAnlnHYRyz6vb+ci9AlNS0Irx2VOjwx5R1QSPO9/9w+vHGvJBXwYIaV2Rf248c7R7ufp6+ELZ+A2pYJ1f8SiG1a86e5nNHD6dnbY/hVeu9rLs3FtflJanQwn904kq9uOcP74LTznNs9x0qefADDRu2Bq5KpaLWCxYIyrPHvhCuyke+gfLYh220REeBgoacBCbN50dd8tMmn4mAgKaox0DM+DIXCGboI06q49ZxeUoaDF/omRbDfxcgXP/sMUUankdy7dpvb+PgwLXWb/qH0nXfR9u2Look0setdvDu9yYLZ9neotBn5qBD3eZ3bP5GuMZ4ZOgAbssqajCX/tD2f55ftR6NU8PNdo+kZH0p5nRGDycqGLO9dfPIrnWsSruGlZuOSEaNQCETESYvBp+99lluTs+ka00BWeOsnkpiXSQfjH4MrFjgeEoEkKkTDknvO5q2rhzpi5bd81rgErj+s2FvEzzuOkxIVzPVndScpIoixfeI5q5eP/PD4vtD9bEgcCD3GSvUAnVyZUumikRR+rpTt1ZyWkrKR76CU1xndjJMgwO8N8s43ZpU55HhBWuxqK7YeK2dJZgHF1fUkhvsvxgVSaCe/Uu947RYbyKZGF2S7eYIp0cHkzJwJFguRU6c2ef1BKZG8esUQHrpAauDd+79LOVJS61iMjQp2f0gM7xbNmocnsPKBcxz7zh+QSEK4liq9ySMU44rVKnLftzvYlVfFuL7xDE6NcoSYAPb7qPpUKgR6J4Tx7a1nsuy+s5v8ndwwuzzs4/o2uLDKub3vF89zC13eTFxDGW3AgOQIJg9OdoTPsppYp2iKfQXV3PL5FmrqzdwwujtzL0l3cy588u9FcMsqZwbRyrmd2pvXpqWRPG8eyc88TcgwaVHd1ETzG1dkI99BqdSZiAvTsurBsfwzeyLn9U9kwcZjFNsaFmfmVXHlBxvdzmnLxdfp727gzi+3oTdZSIhonpHva1uYPWjLWbe69FmtUQfTq+o4V408DY1twbCrS2w/aEDTudyCIDBtaCpn9nS2TZv48l9U6IyEa1VeK3QBeic4X3kfPL8vz10q9T5tbH3DVTFyiC0P3dXs5Fd6b+5QYzATHqTijJ6xdIttZmNve8u9c+eCxrMBiIMgL9kWrumE3nqqtgGTBkoxf3tsvqXM/tH5gDpvQGIjIxug0oBK61xgzvwOtjfSiaoTEHnxZBShoYRPnAhA6OjRTZzhRDbyHZQqvYmoYDU948NIiAjinolpVOlNDk0T10yQy4ZLHprfDRxaSUJ4UNODXOhiM9qlpVWs/eAravIkL2T5aSM4EplMz6p8Mn7+hE9+f5qlP/2H3mHOf5YNc9MbY3BqpFsBUEWdkajQxsXDPrnhdP5zfh/SEsIc+fd7jlc7Qj726zy/dD8Gk8URQusZF8qNoyVBLHt2R6hGyc7cSq9rJ9V6kyPPv9nYi3t8xdIvslXu6r1o+NTbwmTaSEhoRsOOVhCiUTG6d2yrUihzy3Vsz5HWZDbMmtD8ByO4p4nmbwOT7+5KnQV1Sgr9MncRefFkv8+RjXwHxGoV2V9Y4ygyAkhPjiAyWM2+AulL6+oxJkdJ8eW2NPLpyU7Z10bVDb0QYxu/Z85TxL7yFIn6Sr7pM4HBb7xMUsZA+htK0X/9JTG1kgZNzC1XOM5VJ/rvwamVCn76v9FckJ5IXJiGCp3JLZTijfF9E7hrQhoKheAQ9Jr9Yya9/7uU2xZswWi28sn6bN776whzf97DLzulbKbHLx7gSIW8Y2wvvrr5DGZf1J8KnYn7vvFsNlJjMBMR3EIjf/gP6WfSYO/HT79Z6rikt2n4VOZK/4Gk3TLkanj0mHdPv42ICFJT3YrwoeuibXOdCjf+7x9AkNYmXunf8ut0IJqreiob+Q7Gi8v203P2EsrrjG7l7oIg0CMulNxyHbnlOh5f7JSotacutmW4psZgJjFCS2p0MAOTfeh8+8BuaCP0znh1YUgs4/slMGhgD8QG/Svt/Vi7ffVls/9BA6QlhFNaa2RXXqVbtWZTxDXQjfl9TxFDnlyOxlbk9c3mXEcKaYzLg06hEDirdxzXnNGNSelJ/LG/mM83ZDt04y1WkaJqg29VyKbY+Y1k4F2ldxsS1Q1yN0tG/bWB0n8gefJBEc0ufmotEUFqqluYXTPnp91MfnMtAF/cdIajg1aLiO8L/W1er77ipFKo9BfZyHcw3nHRH7lshPtCWWKElqJqA3sbLO7ZPflvN+dSVO0M40x9ex3XfOQet28OueU6h9hVTrmO8wcksfaRCT5FtHxhz2OOtGXUWAWBG26UdMvtOcAN6bVyJSEuipDNIdaWK16hMzE1I6WJ0U68FSnpTRaKqj0XYrvFeH94DOkahdFs5fHFezj/1b8RRZHDxbXUGS0MTm2BJ20xScU9vSY0bqjH3C/prG/52LkvZyPUV7XLomNsmIbyOqMj7FVtMHmEsSxW0aMr1r6CahZsdOa2B2sCYKIEl/+vNUW+x52kyEa+A9Mw1JAYEURRtYH8Cqfne9OYHnSxVXEu3nGcy993Fk3tyK1k3WHvKX3+cPaLf/Kv19fQ31ZtaGxFBeOt5/QkVl/Nn6lD6bplG2eeL6lVKiO8vxVoUv03zg2xqyYCjElrWorVlZ42z/9pl5x/V6NjJzLE+xuGazFSeZ2R//60m7f/lJQQvQqGNcVvD9hu2ERmjF02eOUTzn1rbQ2ea058CmHXmBDMVtFRvzF47nJmfvyP43iV3kSv2UsYPHe5m2TBwSL3ormg1qSb2klyqd+o890Q+2RFNvIdDHv1KLiHBECqIq02mB1fhDUPj2fO5AFulYjHynT8sDWPVfudHktjlZi+cDXo9pS4a85sJFzQBLPOTyOpvpLRZ6UTEeqMsYouc2tOxkBjpLtIEau9lfg3wvPTB9MtNoSLhyTz1tWeGjDv/XsYH13nu7eqfR3lmjOkv9VXm3L4eedxtCqF/6Gj6gKYGwl7F8P+36R9jcgCA5KXHxLrvi/elm456QX/7htA7A/Ln3ced/QHcNX9n7XI2Qd4xd4i1h0u5dbPt7AluwLX6EyragrsjL4PrvxK2taVNj72JETV9BCZE4XRbHVbrGqYjZGeLBmvNYdKSYzQOgpfGsaSH/x+p9vnwyW19En0v0IOnNWirjTUcW8Opvx8BIuFbhnuKZH2xh2A1Inp6FFCRnk2s2gO9mKcljCyRwx/PST1cLWHwVyZNLCLxz5Xzu2fyMfXj2BcnwTWHS4l2ybMVm+2eqpC+iLP5vF+d530c/x/nV2SGuP2mOYvUwAAIABJREFUdfCKSwbNutel0v7Ilr8VtZSRPWKIClEz7/cDjlaRrizJdNZ8/L6nEL3Rwh/7PRtSt1jnxxWlWuqCBbDiCSl/XrTC+rek9oeqFq6VdBJkI9+BsBvWB8/rw1m9Yz0KP7rHSUY9v1Lvph0D8OoVQ9idX+21WcNn67N5ZtqgZs3Fnir43KWDmLUoE0HAfyPlBXvxhrpBGCaobx/67tyBpbIKdWICERec3+J7BJpwl4fFz3f595ahUAhM6CcZ5OyyFmqqKxsYnbg07+MaEtEFbvsbDiyD1c9K+0ytK0hqKYIgEBOqoVJnclQ72x++213aNWZ0jZIK0FzWPbpEBjnCPAHx5MFZX6ArhfVvwsHlUJUDGddA6vDGz+3kyOGaDoQ9G6N3QhjDu8V4HHcNyzSM108bmsrDk9yrIadmJDOhXwJbshvvgeoNu5HvERfKoWf+xf6nJjX7GgA1K1dSn5WFpUKagyrG8/dSaLV+iy35y7vXDOO9f7fuyxvmEjobnBrF4NTmxdRdY/D2Wga/MDdY6I3r432cN7oMgVSXcFLDCtkTSENlztp6M/VmC9PekVopzr14AJHBUhZOgU0L///G9+LHO0c7QjYBick3xFAtGXhw/rRz8HcpVFZ2xPO8Tops5DsQdsPqK3sl1OXVNS3RU35Xq3L/QswY3pXTYkLIr9RzoLCGB77b4Ze+jSiKPPidFPKJC9OiVio8ru0veXfdTdaFF1G7bh3glE1ta/41qIuj8rKltCbsAzhEtEZ2j+HFGT5y3L1R36AJSXMrVRNtC41dhsANS5t3bgDpn+RcALf3GnD12JUKgYhgNTvzqqg2mHnwvD48dEE/kiKD+OXuMdw9oTdaH9XKLeLfi6Sfmd859zVUqdxlO5b7DycLcrimA1FWazfy3mOEruGSaUO9x1k/v3Gk1LABkdG9Y9lfWE1tvZlrPtpIaa2RW87uSf8ujee5l9UZKbSlYvaKb0GloQ1rndOTq/pB+oL52+igIxCqkb4eo3rGNjHSOyEaFdvmnEeIRtm8UJe9cvWyz6DLYFB7F1PzSXgi3LUVoru7a9ucYD67cSQLNh7jjT8Ocd6ARJZkFvLc0n2O4xcPSWbTUedirKtcRnpypGMNKmD0ngjnPQUr5jj3rXwC9iySHgChcWCQqmyx+Cc53RmQjXwHwh6uiQv1nYceEaSi2mD2aajP6RPv9jnV1g+11PYAuey9DXxx8xkcKqrhpeUHWPXgOEIbeKx5thTND68b0ao4vLmBEJkiMhJB1Xn+ySkUAisfOIcukc00si40zJDyi22fAQL0v7jlipFxgZcTbi7x4VoeOK8P4/vGkxodwpLMQtYckrJb5s0YTFSIxpGFAzQ7OaBF9DjHc1/BTvjjSbjwZTi8UtqXsxGGz2z7+dhZ8wpoQuGM2wJ+6c7zjTsFKK8zolIIRAT7/t/yza2jEAT/Y5UpUe6CVrX1Zh74boejX+bxSr2js5Mdex5+qpeG2c3BbuQV4eFYa2pQJ8Q3cUbHw1XErMUc2wCHlkuLfE0ZX1GUCnbSzmsTSeD2YOhpUohuakYyP+2QFuDt1dy3j+tF97hQskrqWlZH0Fxc9X/6TIKDUg0IuZvhaZd/n1mr234urvzxpPRz6L8lYx9A5Jh8K7DqdJgrnIua5rIyjj/yqKOjUXMpqzUSE6pp1HsekBzRZLjFlW5xnqqFWS6dibw1dsirkLJCUlpr5Eslry3yEinHWxnbvMKkk4YFU2HtK/CWHwvB+gow1kDPcW09qxPOMBdVyhHdpQX4EI2KS4el8p8L+rbqrdFvtGFw7pMw9hH3PrUlzjASkadBXTEU7/dcH2lrVj4J+34N6CVlI98Ksq+4kkOjzpKa7Op0lH/2OVWLF1PxzTctul5ZXX2zJQOaIiJIzVUjuwLw0/+NdoRz7Iu43ox8fqWeiCBVy1UTAWN2Nvn3S9Wa6mQpt9xbZs1Jz/YvwewiXWzxoi90aKVT973AVuPQBt2b2ptJ6c6F8NYuareKMfdJzcwBBC8mMLobWM3wzhnwXCosfQRe6OH8f9OW/PM+fHuNcwE4AMhGvhXUH5La8x1/5BEODBuOMUdKxzIXFPo8RxRFvtqUw97jns0lyuqMLRexaoT/TRnI8vvPIaNrFF1t3vmFtobI9j6odqxWkbWHSukR75m90xwqvvvesW0XGVMlBDZNslOw+E73z/Vemop8OR3eszW4yF4LCpXU3egkI8HW7NtXV6524cEDUm3BxCckxcq0C+D0m9zHbHpPUvj87OK2mYM3baGlD4M1MKqyspEPANVLpDS1mmVSfE+/e7fPsb/vKWL2j5nc8rmzNdp/vt/Jd1tyKa6u95lZ0xrUSoVjUcv+z8nu0Tf05I+W1ZFVWsflruJodaXSK6SfQlf6zEzKP5aEssLGjyfy0kuJnH4pcXfc3rpf5GTgxR7un2tcHAJRlD6HJTbeHKQT89dD4/j5/8a09zSchCVIqaZnPyDJQFzzHQyYCretkaphXfFDqrlUX0pWVRYzl86ksM63s+eGuUGTmrQLpLCdrtz7+GYiL7y2kMYaIhh27cJUWIg6yT1P+8/9xdz+xVZAConojRaMFisLt+axcKskgXpNUsv1YfzhP+f3ZVBKJP+y5ZA3NPL/+2UvAMNsi2UYdTDP1vj66u+hT+MVqcbsbLIvuxyA8AsuIPX11wBIfuaZQP0KnQtVkPQlPuMO2PSutM9illIbdeXw24POscY6SUky7OR942lR848TjSBIqavxfWHZo9K+oChJEdRqBYV33/hA+QFm/DLD8fm+P+/DKlr57uImQi8Ne9D2PhcO/Q61RRDW+mQF2ZNvIZbKSrfPSU88Tu+//6LrO5JRK//kE49zftqRD0iKjAD9H1/GkCeXu40Z4aXSNZDEhGq4auRpqJQKwoNUbka+sMrAXweljJju9i/jsfXOk4+tc24vmwVH13hcv/LHnxzbqtiTIAZvtULR3pafH94F0i+FPhc4923/HPK3Sl79fpdFtqN/Q95myZOXaX9UWpjyNty1BUbfAzUFULDd5/B/Ct0LqPaU7WFf+T6q6qX+CFitsONr9569AG+dLv0cfCWMm+VUzayzafkcWw95LW+K3mojLwhCV0EQ/hQEYZ8gCHsEQbjXtj9GEIQVgiAcsv08MaWOJwhzkaTyaFdO1PbpgzrzfcL+vhxBKWIpyZf+ZxqcMdjcch13dznAzN7ee4j2iAtlRCv7YjaHqBC1w8iX1dazYq/z9dIhDFVl6zCkUDs9Dn0FbHwHPp/ivNi+X+CVdAST8/eNuf76tpz+iWHHF/DuKFh4Iyx9tHnnmvRQnS81++g5DgbavLxf75dS9uwE2VIHv7kKDFWNNweRObEM/X/2zjvMiXL7459JNpvtvRd6711QVKSDvYBYsGO9WLCiYrk/9Vqv3WvvYsMGShPpIF16h122sL33bJL5/fFmJplNdtmFrTCf59lnk5l3JpNMcubMec/5nuuFdlAHR379oT9h1zy3YbIs8/Lmlz3uIqnIoSd1dDn8eqczXVLd2BF773Q+jHrMeZEvzhBx+c8mwcdjtA5XA2gMT94KPCjLck9gOHCPJEm9gMeAv2RZ7gr85XjeppHtdjVMU7lvPwCRM/9Fp4V/4Dd4sKrfbfK3Yj+wUpzQFxNh54+UW6wczi7mwYJniZ87ShvzdrD8wfPr142+1gNsmKRwsK/TyA9+bhlzHN2murvmzSvSrDF9hSez7UtYcL/j9Wzw6SRh9L+/HorTsP4tMou6rF6Fd7vTwFjlHxX/d/8kwi0N+Yx3/ywqJ9ufLUIAA69zrnNN2QvtoN0uvJ6CZDrNh6/jQrzyP/DTrVCqVcw8Xla7Zr8am692OHfH1kPWHvFdqhLN7RlwvfDkQQ3XHVh0H9avXBypJU+c1KGfspGXZTlDluVtjsclwD4gHrgU+MIx7AvgslN9rZZElmWOjB1H6m0zOP74E2TMno2pfTt8evfG3KmTOGFePhDcDqNJxm73EYYB4OfbOLj+dwIqnV+Mpy/urdn/kRcmn1qe8J5f4PlYyBUNKsg9DN9Ph80f17pJiK+3qpejcE6XcJY84FIVWJ4P3oEQ1ROS18D8mbDXGZIhZT3sXwhhIm5vLa3C3LkjptMlk6bmrXVJPSfTSjJF6l27ESLGClqhsa2fi//dJjrT+RQiW05UTKcWfGoUar3aVZNDvyt3V62bZpc7fvfljgY+x7fB/84WhViZDl39TqOcsX7vAP4xe3NVfCxz8xz9ggNjxXYV2jBxfWjUmLwkSR2AgcBGIFqW5QwQFwKgTf/qbQUFVB8/Ttm6dRT9LHRYgnr4I1U5PvTKIiHretbtGAIDsRW5KD/6htJx09N0MmSoi/xLj/H5zSIW9/zlfU6tjyWICj1rBex0FHjs+QX2zReyqrWQEOpLan45P29z9r0cGZAFn10o3s+BxSIs4xcGg2+q/bWz9ogWdRHdsVVKGA3NXEDSlBSna58XpngeV5PktaKoacILzsrV4ASIHaAdd+334iLg6s3H1Rij0/J4yqxJXqs+3J2zG2+DNy+MfIFhMcP4dIKzDeOnux2PazYsSflbhO5AK7cgSWz2EemmKSZHbszgm8X/Ancp8RPRaEZekqQA4CfgflmWPSQD17rd7ZIkbZEkaUtOTuttzWXNdPfgQrxWwreOW6xSRyemwFgMtkLsVofRnv4LjPs/gsuTudzLpd/qO0MY1T2K5Bcv5Lqz2p/6ASqiVnt/FXcVxQ7DbaldT7xjhD95ZRZm/eAs8piS+y4cWwsvtoNvrxYL/cIhcZhzw7s3ane04V3xUlEXUJFjwpZ73N0DbotYysTnaXapMK5vZ6Gc/aK3aLT2jo0Zy4VIlisGI8xYATO3iQymeqTq6TQzro1FlHBapkiVLqwsZFfuLnqE9+DizhfzyYRPGBozlI3Xit9JXmUedmsVrHoFgNW+PsyODIfcQ8KZih3g1hSmJFHIRVcqd/dKM/IUbc/mjNIMPtr5UZ2H3ihGXpIkE8LAfyPLskPPkyxJkmId62MB97YvgCzLH8qyPESW5SGRka1X26Q6070BsNFsh/QtIk79rsMIBkTjFexPdbkRe/Qw0YC56zgArjSscG4s28UJbgzK80WrOIDcgyKOXOTwQMty3PXJHUzorU3x7CkdIyJ3o/vAmqXdUT3g/l3ObjsOytKFx1pVaIL9Cxr+Plob698R/6tK4AFHhk19e4QWH4fAGJGh4YrBKDI1Jr0CN/zmXO4XBuGdT5iiqnPyVNuq60x9PiEPH4U5eTBzi5gcLUplf/5+zv3+XLZlb6NvhLYxj5/Jj8fPEqG4/HX/BWsFuQYD98RE8XuAP0Ulx6G63Nmf14XiOCFNfdzLS0zYR/YUktOLH4OCZHXc3X/dzVv/vFXnYTdGdo0EfALsk2X5vy6r5gOKjNuNwG81t20T/PM1FKZgOebezNngJZMhh4k4tUJ0bwLueAnZaqC8x8MAyAHRHJCFtAAmf2H4QXjLp/KlU1BCCP6Oi2TyGihyhmAoyXDfBujgogB4Yd9Yfun7t8dx6sXopj/gCkeMP6QdXOeSZTD2WYgXPVHbjcoT2SiftHGDpYRZEs8SMrTgNuGG3Q4vdxaZRq6feUUB+NaRKXXW7aelPk1rpay6jCHfDOGDnR+c/E78w53SzX7hUJ7H0cKj6uo+EX3cNonyFVHqHRvfBOCf9oPUdSkV2eJu0YMgmZJ2eTwoCi58TcTrlY5ha15Txx0uPHzCw24MT/4cYDowWpKk7Y6/ycCLwDhJkg4B4xzP2xZJa+C3e2D+vVTu2oUtSHsbLRkgVnKpSus+GfzC8BkorsyWVOH9V1ntXFflmFzz9oOuLsavFgPcIJQQwtQvxRV/wX0ie0O5raxZbOHC/WO7MrpHFG9OG4CPt+NLdEON67HiyXcYCf2mOJcbHeX35z4EI+/HXiKidD5hjtz71I3w1sC2G7qRHQ1WrvlWeOQB0bDieTi6yjkmebX4/I+uhNddQjMnMvI6TYLNbiOnXHu3VVhZyAMrHsAu23l3+7v0/aIvr299Hbt84gY6teIXDuX55FY4w3fDY9098g7BHQB4M1RM3OYPvVldl2wpFBo5Jvfq5mKL+C1lWsuoVi4ClzmK6byF5EhWmXt0wRONkV2zVpZlSZblfrIsD3D8LZRlOU+W5TGyLHd1/G+cGt3mZJfQX7EfWUfxksUc69wfr1rkK/68YL4wBoAxPByvqCgK581DlmVKq6zkEsyafi/C9F+1KXI5+0/9OJXyZ/8o6DfVuVyJo2ftqXXT+zuk8ulZWXgZDZB7ALqMg06jKLP0IGVFODaLxL6vQ9nXsxeyxYOxvul3GCOaMNiKisFoxODlcneSf1Qr4dqWqCgQPyg/R1HXmKfE/y8vEQqFAFs+1W6jnIuKQj223gK8v/N9Rv84WmPoX9z8In9naO9SP939qTN//WTwC4OU9eQ5Mme+u+g7InxrqKweWkbn9e8z2RxLiskL+d7tHK9wHtfjURFCZsTbXSeq2KFxZJNtbM0WVfLEDxIT9KXZHMg/wKxVs+p1qHrFa13kHoKQdlSXGsBmJzk6muBAK9EDiwjuVEa22TlhuiHXR30sSRIRM/9F1cGDVO7ZS2mlUB7M7XixqGbrOhamzRWD65utURdlDm/CLwxG3ONc3mGk8D53/+x5O4CvrxCqdzareL+O9L2UX0soyzJT4n+FGCfLlK5dV/t+AFtxEcagIKQpn7qvrKz3XHzroaJQ640PvB4ueFI8ztgBO38UcyGx/SHI0alr6ZPwyQRxJ+XbDProOhrWpIkq7Iwy5x1yebXnhupqJerJ4GixmJu2kRj/GHqH15hgrywWwnObPqRbxl5skkSyUVxcAkxOo14pSR47fxVZihiVMAqAZ9Y/wwsbXxCpmAExsHseVy24ip05Ozkr5qwTHqpu5OuiNBM5fgjpm4QneovtPaLs2QSN6Uv4FX2wD71NHZpVpZXl9Rso4tOW5GT+2CW+cAFmlzFdJ4jsi8LURjlOjN7CIHmZnT1BQztC90nCQz8RKX8LjZXEYcjV1WAX3nhZlvNWUvYkk+uCvbhYtPfrNsm5UBF5ym8jjZFLMmHx46JwJWsXhNTIfDrnPqESeXAR/Ow4/90mwb2Ocvft30CqIwMi+DQoBmtjmI1iorvE4kwWCPR2Fve5etuFVYXsz9/P1AVTKahsWLP7inNm8lF0Apllxwn38dAecpMz9h/o+C1d8qvoq1BaXcr0RBGyLTIYxORrDYqrikkIFAWT6aXpfLv/W8b8OIYcX20Tm37lpUT71S2DoRv52nAoAlrtIVTliLJjnxARa/ZKHIL5toXEDL0Cm08oO7z6uUn2muLiACg9lsIrS4SRjQp0ybQweonsi8aIyRdniH0p6VZeDs8gIEoUKZXnCS+95iSv6wXmC0eKVruzyfv8c3VxxV7nBcKWl1fnYdiKijEEB2kVFNufLf5/dx0cdOj07J0PfzxU33fXvKx4QaSEbnxfaLzXzHbx8hYX5z2/OJdF9xIX14HXa8c2QSs3nbrx8RJ31Hcuu5MKq+hwpnjy74x+hz8u/4OfLhFFikVVRby/43325e/j6fVP88WeLzRe/7N/P8vfx92TETZmbOT5Dc/zlp+BTbZi9zANiGLEYJFsEWDXxv5v6HUDA9uLzLQigwEGXKtZX22vptxaTrA5GC+DVkPye0l7QeiUdZDuYXUXz+lGvjbKcqC6nKpiYZjbXZCLpHRjU7y74ASMDx/m7fhXKSjXxqsNfn4YQ0LIW74Ko93GE5N70r9mezO/MGd+O4gsljri5yqWcpg7TTSkAHGhCHJp7D31C+FxhnaEIHGx4Z0hsLWGaFrSKtzwj9Do4VenpSH5+iKZzeS88aaqoe8JW3ExRmVy+pK34fZVzuMqToe5U8R7/GE6bP6o0fSyG43yfEd/VURaLHjOgPFzeG6+oeIiqmi/97vaOebKT/RwTQvg6rUfKRR3j3mVeQyLGcb5iefjZ/Ijzl/8JgqrCrHaxd3pitQVvLrlVT7bI34juRW5zDs4j7uW3aXZv81u47alt/HbEWdyQrivB0++LEdku/W6DNdv+c4bdvLw0IcJ8hPRgeIxj7vN3Sjx+CDvIJZPWa5Z94EllSMmp+Efnp3E2+d61sxR0I18bWSJQofKbOH9+oS6eOqu1Z9GL4L9fdhzvJihzy/jgldXsu5wLj9uScVWWIhpzw7u2fEzY3tFI8syZevXO3N1fUO1mtHfTBHlzs8EiwyOmul66rHtEeGCRY+IFL7cg6LsWSGiK4z7t0i78neZ9KwprOSSb6siSRgCtbeE5q5diX/zDWyFhaTdd7/bJtaCAlLuuIPKXbuQqxw5+YNuEJWbfjV+ADtcWq4d3+7siNSYVJWKql3FUNcHu12r9a6El/w9TBrfuED8PZoM925zTsxGuHhU/mdoq8MWwC7bya8Uv6MqaxU+RuHNz14zG4D8ynzCfJyKqP4mf/y8/Mgqz2Jf/j7NvpRsmUMFwpnx89JmvrjG+hUSHRcNDWU54k76wtcwORItZvSdoUqXKMeTHtHJbVMldBRiDiHUJ5QnznqC+wbdp65f4SeO6e6CQiLsdgyfTXLbhyu6kXfw7orDTP9kIxar49bKIS9bkZKPLSERo7cwzLtHfaytfgNC/USsPaekiqTcMq77eCMPz9uprh+Qc5gwf2+K588n5ZZbKfrV4QX4hmo9+VSXQqQvLxH6GBUeYoWKMqSlFObdLKptfWrp++oqW3tsnZA6Bcg7IhqBBLcT8eRRj8PZ91K+dSt5H4h4YqcF8wmfMYP2X3xO4KhRhN16C5ajR8n+7+tU7NrF/kGDOXr5FWS/8iplq1YDUFmzYYokaS9A/7gY3o9Hi45I1Z5VOU+aA4tE1e4fD4qLSH3atpW7hKJcU1zNHhp5R3TRlqEruOrAR/d1X99IyLLMvIPzTm3i8DTi8z2fc/7355NRmkFJdQm9wnsBkFchzml+Rb7G25YkibiAOL7Z9w3Z5dkEeTt/O7mOdGRFVKykuoRfD/9KtU04eSnF7okS3RY/BfkumTqyLO5c/SPBP4JxN61gzvA53Nnf2TSnc0hnInwj2JCxwW1/x4pFTU77IBExmNZjGrf1dc7/bY4SF4Yoq+Me4QTfb93IAwVlFl5ZcoA1h3I5mOWYsMnaQ6EhjD3bDrHRFsQH1gu50fIoQX0vdNs+9AQt+4ItpfhbKzn+qBDirE53VKPWNPKeSFrtvqzIJZbuEAurPHIMS3KyhxdPEAVYirH/1fFF+2aKyAAxGMRE7ahHYfz/Ufij09s3d+1K1IOzMPiKGL9vX1GFl/fhhyRPmYpcXk7Vvn2qlg9A+6+/cj+GmVthqmN55i53vfTno0VGSkn98n5PiKIcKdvFReSD805cdKbIUkz9UisQZmpAkwtJgss/gLPuFIUzTcSx4mM8+/ezzFw+88SDTxOyyrJqrVZdkrwEgMXJiymoLCDcN5yru1+NTRahlZLqEo0nDxAf4AxvPnfOc7x5wZucE3cOORU5yLLMwYKD6vo56+bwxV4RxjtW4l4U2c1SDdsd2XJZe+DZEOE0OCpZjQYjU7tPxdvotBMGyUC7wHYec92TisUFQzHyCv8bK/Lk11vzCTR4M77PDXD1Nx4/E1d0Iw9klzjL/i02hydflMqh6nBiyvLI8I/gP9breGbWfbQLdy9cCPHz3PB6e4RoxuxnrSLjURelZUWLzDdUNAZYJ6rhPBoUtwpLmzNHW1lULZH0/gGSr9FO4ACiO/3sVLj+J5d95jjDEUOc/SztFRUUL1yIMSKC9nPnuu3KK+rE+e4+vXq5L/T2h44uPUv7ThHGtP81zmWpG0RmSmOgSA/YXbKBUj3INbiiGHn/KK1YWC1dgGql/zSY9FLDtmkgSqHMP9m1N7A4EYWVhXyx5wvWHz85jfLmJLs8m7HzxvL61tfd1h3IP8DePHHXvTptNQWVBYSaQwnzCaPcWs7GDHHe6zLyI+NHMrrdaBICE0guTubXw7/y9b6vAYj1F3ehb257k5WpK0kpTsFL8tKET6JtNlj9svhtbnM4M0Hx0POSOt9XhG+EpphKIbkomUjfSAJq5M+PjB9JiFnM84zvfDGBE18UadI1FTJrcFoZ+bIqKxWWhk/mLdrtjLMVK52SynLItwRhtlvJc4RCOkZ49ur8vcVEyDldwln9sFPP5akRt/HAecLbKl3unEDJffsdDg4fgWwKprrMSOWP/xb6MtVl7g2ca3ZtX/E87HAxwN4BWC4W3retoADZ6iHN0WAUeb1KzFgxeJe8AyP+pQ4rmDsX2WIh+rHH8Bs00G03XuG1e6emuDjaz63DSPuEOLN+fEKg16Vw+fvaMY2VZulJX2beLbDuLRF7V/jzaXitp+i6o1xMA6K0E6itkFMN02SVZXHu9+fy6pZXuePP1p8BpMTBlUlRV5aniN9Vz7CepJWmUVhVSIhPiFvGS800x7gAEUcfnTgak1E4ab3De1NWXaaRPlh6lbNz26e7P2Vn7k56R/Tmtr63sebqNcy/5DekyJ5iwPF/hAcf2kFoO9UWQnVQm5FPKkpSK2VrUuhQvT03wWEnfEPgMfe7C1dOKyPf++kl9H92KdM/2cgV760jObd2BUaFrOJK3ljmzBgpcRQuySXZBG0UoRvfiDBuPqdDrfsY3TOKe8d05cPpQ2gX7sczF/diwb9GYjB7cyzQcw6rrbCQ/Xd8yOEF0SQtjhJFNAA9LoKrv8ZaaeDookiq9mwTE5QKyuSpdyBc/CbMTsNa7UzNrDpSi6GUJGfFpmNSmaheYDAg2+0cvfQysl95Vew6Id7jLowuRr7LiuUEXOC8oHWcPx+/QYM8beZ8/U7ni8e1ffnL6k7RrBd2m2cjX5wOf86BNJcWbevegJLjouvOLsfFNCDacxy+FVFkOXkjb7FZeG3ra5plpyRbT3S5AAAgAElEQVTa1QwUVjo11Muqtb/ptNI0ovyiGB43nMyyTGRkwnzCmNxxMld3d16sw3y1nnzHYDHJ7jqRek686PKWXqqVl1a8+VBzKPvy9jEwSjhAIT4hdAztBNMczk3aFvE9Mng5dY/qIMY/htLqUs1Fu9RSyt68vfSL6Odxm2CzyMTpFtrN43pPtEkjL9vtyDbPHrvFZmfNoVy2pRSqTbPrYtsxbUw8q7iSxSs3kbOxmpBM0bVl9tSz3Jp8uBLkY2LWuG74m4VHf9M5HembEMzcGWdRYXJWwobdeAM99uz2uA9544figU8Q9LyYku7/oarIRO7eAPjwfLBaKN+8mUqrwwDfvlJk+UgS1hynN1D8++81d+1EyQI57rjNDxF5vNbcXKoOiHz4gDFjPIdcAIO/P6a4OKIffxxTbCyJ/3uPxA8/oMuK5RgD6hG7djQWobrCuazzGOdjlx/zSWG3Ca2cY+tq75OavlVo8bjmuQMccdxpmR23yLP2C+nfVoirUdiTK1Ju16Wv8ziJV5O3/3mbRUmLNMuUzJTWiuvx/XnsT/WxxWZhXfo6EgISaBfoLDzrGtKVAO8Anhz+pLqsZrhGMdRDYoaoy6L8ougZ1lN9HukrwpNfTfqKQFMgR4uOUm2vJiGgRle3kHaidmLxo+J53olFwwA6BHUAnBOtAL8f/R2rbNUclytzJ89l5sCZ7sdQB23SyB8eM5Zj02844biUfM/lzCsPZLNiv7g9P5IjDPmmx8fg7WXguT/2kfLBa+Ttc3pzxpCTy3cekBiKl0FizXOf0HXdWqIeegjJaCT2P/9xGyvbJIpTfUia8xmW1FSsJSLvviLPW8wZPh/Nsek3kPRxsqiwdMT7AaqPHwdJwqdfP8rW1RFjVbyZlL9FyMQ/kordezg6WUwme0VHk/juO0jenieSJUmiy/K/CLthuros4LzzMMXGehzvRlQP8d81L3jaXHjwoLiDOYmuNxoKkqHQ8YMJd34+3LQQ7nH0VC3NglUvwY831b2voFgh/dvKkGWZ/+34n/r8k92fAKL4Z8bSGSfc/lCh8671mRHPAHC8tHYBu9aAq5FXuywBe/P2kleZx2VdLuOyLpdxz4B76Bbajb6R7plNrjF4EPn0y6cs54HBD2iWv3HBGzw94mkeGfoIX08Wcflo/2iGxgwluThZfa7BaNJmkNUTZWJVMfIH8g/w/MbnAXGh8kS7oHbc3u/2BnWR8zrxkNaHNSMDa0YGttIy1YP0dMtZW7elmz4TP/jkFy8kJb+cyEAzUUE+DEwMYWNSPuE1dFbqM+HoCaNB4tDzk9xOiP8Id7U6e/xIsv9KobogjYw5T2EvEaGi6lIvyjLMBMS5aMInDNZsW7FjB96dO+Hbty9F8+cjy7L6mraSEpAkjAEuQluVRUI+V5I4/tBD2EvFhS7+dfeJrUZlwPWiAUdPF5U3k4/48wk5dX39UpdMhcAY7ePwzhCUICadzS4TWuc+BGtEmMptPqQV8u72dzWefFpJmscJSYXcilxe2vQSt/W9je5h3VXdlLHtxqrGcF/+Po+GsTVQYa3gn+x/CDGHYJftqvDYtqxt3L9C1GyMiBuBl8GLO/vfqUlTBPh0wqdU2aowSO7+bKSf++86LiCOq7pd5bbcNQWzpm484GzS0wBiA8SFQQkZpZU69xHl13iN9NqcJ+9qzEv/WqY+/uUfZxxtzkUi3FBSaeWQIyWyoMxCWoG7Z38kp4z2YSJjRgbi5Bx67UtW16feMxvvhPrfGtXE0xXXFBNDl1WriHrkEXVZWfztVBeISd/yDRuo3LOHoPMGYzDZSV0dTsoKl4kjpRUYohCpbP16As49D1NCAvaSEuzF4iIlyzJHxo0n6YorxWBXsa3I7lTs3KlJuzTFapuINDoGA/S+zHO80jdExNJXv6otEGsIrv1XI5233arB948Q2UyuTVTOexiu/QFuXSa6eLViUotT1UnBjsEdGRw9mH35+5zt5UDN51b4/sD3LE5ezJLkJby25TU13fA/5/5H9W7f3PZmM72DhrErZxfDvhnGqrRVRPtFE+EbQV6lmLe5cfGNFFQVcFf/u4jxr/17OzRmKCPjR57ysSj6MJd2vtRzhauSwDDpZbj1T/f1HvD18iXMJ0y9k1Jy8zsHdz61fs81aBNGXpZl1bhX7nJWSFpznRN1Ly8WMeXbz+vErSM70iNGhFue+0NUtP3r222MfGkFf+1zenvlFis70woZ0kF4uE9f3IvVBm1FZ8CkyU3wjsAUHUXguLHq8+OPiHieqb0zthh45Q2YO4m4eVmWc3LVbhITl7LdTtb/PQc2G/5nj8ArQmQUWB0aM9bsbGyFhVSnpIhlRpdUz4julK5ZA5JEt00b6bJyRf3DLk1BeGewV8Py/4MfbzzxeE8oGTLX/wRnu+SQK3rcIYmiL2dJpkhxe+iwuIvoNgESh2o/n1ZIcbXzDvOni39i5kD3PPmscuf3e2nyUt7fITKY1qav5fM9nwPQJ7wPPl4++Jv8aR/U/tR01ZuQhUkL1cdmo5lI30jVk/f18iXEHMLdA+5ulmMJ9REO0qDoWpILxj8HT+YIvSLXVpknIM4/jp8O/cS69HUcKjiEv8mfeZfMO/GGDaBNGPn0e+/lyMSJyLLM8cedne1tBU6P76xOwlDfeb6Io95xvqgKM3sZkGWZbcdEvPehH53VYXM3plBtkxnu2LZj5lEO/eI0dEeDYukU6a713Fh4JyYS/5bTizIEBdF58WJCHTHvgPPPw7vHYLftMmaLz6Bi2zaKF4ofgik+Hq8I4WFkv/Qy1dnZasgHhAYNQGmGGVu1BJE9qNyzF1O7RIxBQZhimtiLPxGx/Z2P847WPq4uSjPBYBKTuS4T3ioJQ4XS5qElQjwqoG3p3CviWR+P/xiT0cTg6MGsunoVy6csZ1CUMD5v/fMWdy67kzE/jGHdcac0tGv5/sSOE9XHo9uNxmKzNEuGTVpJmnonURc7c3bS94u+aq46gMloItw3XE05lGWZSztf2mTHWpMrul7BGxe8weVdLvc8QJLcKuHrgxLfv3PZnfx06Cf6RfRzEyU7VVq9kbeXlVHy5zKqj6WQ+fQzSCbxQRr8/Cj8cR7l27bxx84Mftt+nP6JIYQ5qk8vH5jAiE7hLN2bxa1fbKGiWmTjFLioRSpe/gDfaqrT0zl2rbOYKPQiXzr99isxwR6MRSNiK3RONnZduwZJkoh+7DG6/7MNg48PETPvJfY//6HDgxfgHSsmgIv/+AOAiu3O1EpTXBzGMGHkS1etIu/Dj0Q83oElLQ1rfj6pq8JJWxuGPagDpatWETCylcSh41w8pHqkn3mkJFNk1Si3uuYgkWqqMOQW5+MTVRq3QpT0QX+XorkwnzAi/SL59zn/BmBR0iLWpa8juyKbnw+59xGY1GES03s5J85DzaFY7BbKrZ6TFBqTN7e9yUOrHuKFjS/UOqbYUsx1C69Tnyux9Is6XUSkbyR5lXmUV5dTaatUvevmwMvgxZh2Yxo1jAK4hZo8tRA8VVq9kXdVPSz84Qeq9u0j7NZb8OnfD1tREceuvY575opUt9ggrUFWepgud2TSPDS+G33ig3j/+sFcNkAUQ/ibDGSMH8vhMWM124adN42esXUXMzQGQRMm4Dd8OJ2XLMbgyGqRDAZVSsA7IZ6Qyy/Dd8Z7xL3zsbqdbLFgSUnFGBJCt40bMPj44J2YgLmryCox+PurE6oA1enHVang8iwzNjkAbDbM3eufb9ukSJJTqrfw2MnF5UsytV3vHzwADznL0zEHws2LxWNrBW0Nxcj7eWgXpxT31ETJ8VbIrczVTEIqk49r0kWzje/2f6dJ6WtMFC/82/3faufWLKXMWjmLpKIknln/jGabLiFdWH/Neq7seiWRfpFUWCtIKRH6MTXTItsit/e7nVv6OJ2P3hG1p2qfLK3eyFdnZrot8+nRk6hZD6rPjQ7J2rgQbYeVjhHaH8PUIYn8PvNcJvaJ4fnL+/LWNQNZf8cAt/1HTDkf74sfbozDPyHG4GDaf/4Z3u3bn3Csb+/eBE4Ut9pHJl9IdXo6psRE0agDcXfTacECDIGB2MvKtEY+LQ1rvtN7tZcJg2EMaLpwVIO5+G2IdZyP3T/VPdYTJZnaVDZvP622PUCso8jk7HtP7hhbENWT93KvSTAZnPMJfcL7qHK6IeYQFl3hzIuvmUo4vr0QY3t41cM8t+E5nt/4PE+te6rRjx2ETrqCIs0AsCFjA38e+5NZK2epnZ1ApDM+M+IZAr0DkSSJxEAxP7UzR4j/KSX+bZkwnzAeGPyAel76hJ+Bnrxi5Nt/5VQvNMXG4Nu3DzHPPgtAaKUIS0wdqs2CuXRAPNFBZmZP6sG8O0cQ5eLp+5u9uKR/HN4F2irLiEsGEvl/7ztv+VsZQZOFrGh1Whrlmzfjneie+WMMDcVWUEDu+yITwxgZQXV6OrYCp5Ev2yAKZwytycgbDDDFUbq+8CFY/lzDti/NrL0ISsHbH54pgmEnzilvbRzIF8kF/rWIpi27ahmfT/ycby78Rs3B9jP5kRCYwIZrN/DumHd5bNhjmm28jd50DhbzWN8fEDLQrga4Jja7jbXpa08qhu9awu/aiUkRA0sqSqLS5lQkHdNujCa1Uyl42pEj5tWaM1zT1Lw1+i3uHXivew5+I9Dqjbw1IxPJxweffs4yX68gX8jYyY4KMUFxdsYuXp3Snx4x2vBKdJAPGx8fyx3nd1YzaNz2n61VgQu8YXYjv4PGxdXjly0WzF3diyZMUVEU//EHVQcOYAwNxbdff6rT0sj72BnuKV4gKmNblZEHoYjp59AdWf2K+3pZFnLJVaVaZUlrlYizB7bwBHITsCR5CZN/nswPB39gYNRAN+EqhWj/aAZHD8YgGRjfQXjoSnckf5M/5yWc5/ECUTP8U1FHKOvrfV9z17K7WJXmoeFMHciyTE55Dl1Dxfe1oMpp5BVJYJss7shnDZ7Fjxf/6LaPxKBEJKTT0sh3C+3GjH5N43i0eiNfnZmJKSYGg9mZQnj4x/vgg3N5Z6soIrhr129EG0+uy1D51m0apUFz78a/XWpMfLp3p9PvC/AbNgyDnx/+I91zgKPnOMu5233+OeaOHbAcO6ZqvRsCAtRJW4N/KzPyoFWsrEnqRiGX/N01QtL159vF8lzH3E3wydc0tFZ+OfQLqSVCXnpU4qh6baPc/lvtHgTrauDrpQ1zZpdnY6ula9cHO8Td4ebMzfU6DoViSzEWu0XVXFFSIUFr8AEmdZxEj7AebvswG81E+0ercwanQ0y+OWj1Rt6amYmXo0gn4b13qRg9kZ4W8QUz+Tlv7SIaOFFXsmIFxUuXUr55M379uhHRp5iQyec3+ux5U2Du0oV2n35Ct82b8O3rXn3n0707nRbMJ/T66zF36YypRjGXwd/pzRkDW6GRT3SpCLbUyPrIFrKyqs7+TkenqUOO1LxOF3C6oXQpAhgWU78cbMUA1sfIPzn8SY1RrbZX892B79zGWWwWSqpFaPTLvV/Wml+/OXMzBwsOakI6SqhGKdd/cNWDLE4Sk+A1VTU9Fhs5UDRbxrQbo2n1p1M7rdbIV+zahSUtXXjy0cLIB44eTdG9s7EgJpkGeTl11YOK3CU7a8OSlk7aXXeTfu99VKem4h0dQmSfUmIfvuvEG7cSJC8vJGPtqYbmrl2JefIJJKMR747OFmNd/15P4v/eU597tWQBVG245riv/a/z8eZP4Het1ghePnB4megGFTdQaM6cRlRaK8muyOayLpcxZ/gceofXL/tCkdpVlBXromNwR3646Afu6n8X/zlX6Cq5CoEpPPv3s5rnhwsPawoVq23VvLz5ZW5ZcgtXzr+Sp9c/rY59ZLWo7nYVAHtn+zuUWErYlLlJzfMH7SRyTUqrRTKBMmGsc2JarZFPnjKVI2PHYs3JUT15gK3HCihG3F6OMW7j78feAMCvuP6e/JGxznRJW2EhplJHq74TiO+3VczdhPcU9fBDeIWG4tOrF13/Xk/XdWtb551LjIvM6upXwObwRv+Y5T7WWglfXwlpm4Vw22lApbVS7Rik6JoMixnG1O5T632+wn3DWXTFIjcBrtqQJIm7B9zNRZ0u4squV5JUlOQ2Zv6R+YDQYAcRS+/3ZT/mrJsDwA8Hf+Crvc7OYL8cFjIRrp2WuoU5U3bLqss4XCgUG0fEjajXcY5uN7pB43VasZFXsdsxxQjvLL2wgndWHCIIcQvf3yuFm6aJXpuZTz/DsZtv9tw0wwVrgXsRjMnq0L0JTmzEA289eIWG0mPXTsJuuUWzrK4mIC1K/CCYtQ/GC0U+qmrP9tAw+CTlEFoZV8y/grHzxmKz29RMl5NJF0wITKjTK66NaL9o8ivzNTo4Sgz95j43q1ICJRYRuvntiOhZ/OKmFz3uzzXm7tq8o8paRX6FcM7OTzi/Xsd2e9/bWXP1mtNq0rWpaZVGvmZ6lu+AAciyzE2fbsJMNWbJihzSDqPdgqHK6cGX/72BSocuuhLqqYk1y72notHHDkZzw1u9tSEkk6l1eu21ERQHfg6DUFGg7eikcPFbzscGU6vOrMksy6TUUnrigaBOshZWFVLsuMA1Z/xZUUDMrnDK+iq56WPbjVWPJafCOXlqsVnUx48MfYSeYT3V/aSXCCfqhZEvIEmSeidQUl3C0SIhYRHmE8bd/e/muXPqTps1GoyEnKZ33E1Fq7RqcpVTJdDcrRs+3buxLaWAQ9mlBCEKQqRoRxZMsbaLS9X+A9jLyzkydiyHRzkn4Sp27aZi127yPvzI7fW8fGwQ1dNtuU4L4+v4MVcWibi7QkA0PJIEA5zl75rK1hZm2bFlvLz5Zc2ycfPGMX3R9Fq28ExBZYEa5ggyN331tYLSNcl1wldpLt05pLNq5F0Ll5Sw0lXdrmJ6r+mMjB9JXkUedtnOzlxxgRgcLXSYXhv1Gu+OeRdw6uGH+YRx14C7uLRL8+nRnCm0Sj15pRoTwNxd9CXdnCxu+V6anADLgejecGAhFKYQduMNSGYf8j78EGt+HukPOatVK3btxisyguQpUzy/mEHGNHAiXOEhJ1unZVE8tspCWOaYxAvvCld84NTGV6j5vAV5YKWIg49rP46BUQPVzJLDhYfZnLmZoTFDa93WtSr0q31fqfozQd7NZ+R7hffCIBnYnbubUYmjkGWZLVlbiPCNwN/kr2bVuAqgXfTLRQBM7ihUWyP9IrHJNvIr81mTvob4gHhVYsHL4MXwWJFBVVZdRr/IfmqfVZ3Gp9V58rLdrkrlGkNCiH5cFCel5JcT5u/N6DhHzL3DuaKXYtYeomfPJmrWA0i+vtjy8jVNs5OnTCH9AfcJu84X59Bj6nG6vXQlxhu/FuEBndaF0kFqxQsidbLzaJi5BeJdlDkThmqbkLQwSlogoLbZu3GRc67gliW31Cntq8S5AY3AWHOGa3y8fIjyi1J1zrdkbWFd+jpVH8dTAw4FZUyUrwjVHCo4xIbjG5jQYYImXOht9FZz5pU2eDpNQ6sz8hlPPUXSJeKWLfa5/8MrNJRyi5W5G1Ow2uxQ5AjPhHUSjahTnH0tvUJDKV292m2f1hxtY+euf6/H278ayQDGkTNarYTBGY8SrklzFN4EergQ37YMrv7afXkLsDJ1JQ+vdt5FKvnfNWUCXFvY1cTVyCvc3u92zEazh9FNR5x/HMfLtM0sbu1zq7p+4RVOrffre16vPlaaayjl+WvS12CTbZwVe5bbayjbSei/v6ak1YVriuY5ham8HPnxqw+K293iSisUpYFkEEJUXcfBmteExomlDK/oKCr+EZWcksmEXC1ufRUtdYDoJ57AK9QxM+8XDqEdmuFd6ZwUNSfY5JOram4OZFlm5nJnE4/OwZ1VQbEuIV2oslWREJjAoqRF/Hr4V8a3H0+nkE5u+3HVd1GY1n1a0x14LcQGxPJPlmj4rryPfpHO1FZFLAzgxt43EuoTysrUlaoWurJ+f76oZQk0ud+JjGs/jtVpq/nXwH81zZvQAVqhJ++KIr6ldHN6d3IYrH0dAmLA6CW8eRC51Bvew6+H84uX+PHHmHs5J1ONYWF037aV0GuvgZ8cGhHn3Nc8b0Tn5DBpy+0ZPadljqMeuFZtjowfSahPKOml6by46UW2ZG0hyi+KO/uJ/qPvbn+XS3+71GPY5t9/C114116lLZFNEucfR1Z5Fla7VTXySn9YhVmDZ9E7vDcx/jHc3u925l44V10XbA4mxBzC7lwhpeFJHjnAO4DXL3i9zvZ9OqdOqzPyNpd4n8EhobviQDbndYvkwuUTRYs4pVepv7azj7eP+KEZgoLwP2sYHb75Rl0XctVVGPz8kEqOw64fxMKO9cvN1WkhXMNoXcdDcHztY5uZ17e+rtFvcU03DDWHsit3F4cLD/PNPvEdbBfUzq1c/8VNL7qJgSkphTf2upGt129l6ZVLTyrX/VSJDYjFJtuY9vs0MsoyMEpGt5DRzX1u5ruL3OUPFAZFDVLfn5+Xu5HXaR5anZHP9Atjf2gi4Zv+QZIkqqw2ckstDGnvWvzgyKOv4eGYrCKGKHmJW0aDry/hM24jZNrVRD7g6N3qKL6g63iIc9eS12mlNHJLtFOhvLqcT3d/yi1LnMVlrnH2jsEdqbI504BHxo/k3oH3umXIfLv/W/6343/qc9fMmgDvALyN3sQGtIxMg6Ixc6DgAN8f+B6bbGtwnYWrpIInT16neWh1Rj7IUsaB0PZkl4gfSWaRECHTNARRWsUlDoNw0QmJbhMx5qwHwG/YMEheBz/eRNT99xH7zDPOL2i5Qz9+pIcSeZ3Wx82LRNrk+AZqyzchaaXOOR6lcE+pCL2h1w1M7zWdCxKdNRpPDX8KL4OXRyOZVuLcV265iMc/PeJpt3HNTWN0KBoSM0R9XFPpUqf5aD3uEYAsE1hdQZG3P8cLK8grs3AoS2QbdIrwExOu5iCY9JIYL0lwz2a1ObPPwcXE3Xo+gRdOgs9Fvi7D74FEl7xkRa3Sr5WW9OtoaX+2SJtsJTy6+lGNV5pUnESEb4Tqyd836D68jd68Pup1Bnw1gGExwzTeeKg5VFPmb7VbKaoq4pJfL1FTCZVK0ZbEZDDx22W/cemvItPtqm5XNXgfrqmRLRFy0hG0KiNfbRG3q8Vmf95fdYRtKaLJtdEg0SvSG2S7mCw1u0wAGQyixVvvy2HpHILb2WDZo871n4yFO9dBjKNCtkRU5uEf0RxvSec0oqCygIVJCzXL7l52N+mlIq03xByCt1H06TUajKy5eg2+NSaP3x/3Pv9k/8OQ6CFcteAqiqqK2JO3h/zKfPIrhQOipCG2NJ2Cndk/NTtK1QeDZGBozFC2ZG5pW5IapxlNbuQlSZoIvAkYgY9lWfasYgTk5JdCoJkib39sqVtIkIJJkyMxGiR87A5dcXMdRSFhHaEgGWp2v0laJYx8fhIsfVLE8mupkNyQsYGK6gouaHf66ZLrnBqelBkVAw/OptgKnrJieoX3old4L0DI5S49tpR3t7+rGdMaPHmF5855jqNFR086T/+jcR9p5id0mp8mjclLkmQE3gUmAb2AayRJ6lXb+LA84WUnDuzNb+anWGu+j+uNf2Iz7+dAzi4xqC4jH5wIeYch3OGBzNwmhKvKHMVQ85U85tr7U85YOoN7V7S9Js9tne/3f88fR/9o6cOoEyXzpTZcFRbrg9LYQxH/UmhNDaov7XJpveWKPWE0GPVJ1xamqSdehwGHZVk+KsuyBfgOqFOBqCIokE4XOHOO53h/hl+7T5m62vFFC3MvIFEJThTZM3t/E5Oz4Z1F7L0sFyqLIXmtGHfN9x43d1UJrLJV8fLml9mTt6c+71PnFKi2V/Pcxud4bM1j9epk1FIkFSXV6dE2dHLRNaXS2yDCPL3De+uhDZ1GpamNfDyQ6vI8zbFMRZKk2yVJ2iJJ0haAWdPLeWvnKyg/9b3e4stvRxZaJgm1izsx6AaIdaRFejtCNv6RwsgXpgAyXPoutPfccMDVU9ufv5+v9n7FzYtvru971TkJ7l52N4O+cnYFUopnWhuyLLMufR29wnvVGjNvqAd+TY9r1Mc+Xj6sunoVn0z45JSOU0enJk1t5D25JJpYiSzLH8qyPESW5SGyBAWOOdV8R2u7oyaTdsu6vJzgeJixHC78L1zxoVgW1gFy9kGpQ1s+rLPHTXMrcrluoVO69qeDQl6hrs71OqdGhbWCNelrNMsaKsfb1FRYK/jp4E/syt3FkaIjXNblMn659Bf+mvIXPcJ64Oflp6Y89o1077dbF8HmYD4Z75TaDfMJw7/mfJKOzinS1BOvaYBru6UE4Hhtgyt8ZfwNwogf9DZxR1g0ySZnH9PqqiJOmIhlMMJQp5AS7c6GfQtED1CotbHEAyu0cUeldZlO0+GqV+5KZlkmUxdM5cPxH2oaTLcEH+/6mA93fqgqLw6JHkKgdyCB3oHMnTwXi92C2Wgm0DuQce3HNXj/fSL6MLnjZO4ZcE9jH7qODtD0nvxmoKskSR0lSfIGpgHzaxtcFuh08u+KieKwtxdWF88975I3Gn4EPS50HMnH4r8HSeFKayXbc7bXuovCysKGv65OrWzP3s7x0uOqeNU5cecwZ/gcRsSOoF9EP+YfmU9BVQG/HGr5C+2HO8UdoaIzo0yWApiMJvxN/ngZvJjQYUKdEry14Wfy46XzXqJdULvGOWAdnRo0qScvy7JVkqR/AUsQKZSfyrJc60xmmM3O8IoKNvh6nsB6OncDH9DAGHlIjR+Pl3Pi7OFVD1NWXcbZcWery2L9Y2kX1I6NGRvVZYcKD9XZ6EGnYSghGUUP5X9j/4ckSWzK3ERGWYZaWNTSWSaeQnV6OEWnrdHksgayLC+UZbmbLMudZVl+vq6x/nY772XmINXo8fpitij3Xp+xnqKqIjZnbqag0r0ht0dcY/g9LlKOiaKqIhYnL2ZN+hpe2koVKDsAABchSURBVCwqaLuEdOG181/jo3EfMaHDBFUdr7Wn9rVGUotTVfVCV1z799pkG1W2KjWbJNA7kBJLCVnlQnX0RCmLjUVmWaZGN0ZB+Y49MvQRdZme+aLT1mhd2jWhHTD1vJiQGk2bR5dXcLWXKBC5asFV3LLkFs77/jyNvGud3LoMJr4IV30KiO7yI78b6Tbs+4u+p29kXyRJ4tXzX1UbI6xOc29E0hSkl6Yz8ruRahijrSLLMpN/mcyUBdqWi3kVeZrmzwAPDn5QfRxqDqWoqkiN1S9OXsz69PVNeqzFlmLGzRvHa1tec1unGPn4gHjeHv02/z773016LDo6TUHrMvK+oXD11xQYjdrFssyIUKENr3SpAaHiVy8Sh8Lwu9RQzYH8A+oqpbrw6u5XqyXpCiaDiWndp1FYVYjFZqHSWtngt9QQFiUtoqiqiB8P/Nikr9PUKBff1JJUssqEV15WXcaoH0Zx97K71XFB3kHc2NvZGm9E3AisspX00nTOSzgPEKGypmRH9g4AliYv5dHVj2om4BWNmTCfMEYljuLyrpc36bHo6DQFrcvI1yA+IJ4N474AICbaPT1tU+amk9qva9NgpaFwbY2S2we1p9pezeCvBzd5zryiXeIpdNCWcC31V0JhO3KEMT1QIC6wU7pNYe20tZrwx4BIp/Rz34i++Jv81T6jTUVKSQoAORU5LExayLKUZWpISZkbqKkDr6PTlmjVRn7exfPwjxsEM1YQ3eMKdfmohFH0i+jHsaJjpJak1rEHzxwqOESYTxhrp61VPcYh0UM8jnXNfd6dt1tzJ9HYKHcYR4qONNlrNAeuUrx/HvuTGUtncMefd2jGzBw40y2+bTKaVIneCxIvINY/lsyyTDJKM/hu/3dNcvFT4v+uKCGl9NJ0DJJB71yk06ZplUZ+9rDZJAYmEuDtqIyKH0SYXzgmgwlfL1/+O+q/DI8bTnZFNpN/nqzp0HMiii3FrE1fS35lPsHmYMa3H8+6a9ZxdvzZHsf3j+yveb44afFJv6+62JmzU70zOVxwWDNB2Zb4fPfn/HhQG27akOFstv7VpK9464K3CPUJrbkpAG+NfotdN+6ie1h3wnzCKKgq4OYlN/P8xucb5bM/XHCYz3d/js1uQ5ZlcspziA+I59mzn1XH/H38bwD25O4h1j9Wl8nVadO0SiN/bc9rNd3gQciWxgfEMzBqICajiYSABHXdG1vrnz9f0xOXJKnWUE1N2ge156dDP5144EngmklSbi3neFnThikaiyfXPsmjqx8ltTgVWZZ5betrmvTTmvSP7F9vhc9Qn1D+yf5HDf88vvZxxs8bf0pZN9P+mMZrW19j3LxxzFg6g+zybCJ9I7mi6xVsu34bRslIcnEyO3N2su74OiZ3nHzSr6Wj0xpolUa+Nl45/xXmDBfNnF1zqPfk7aHaVr9beaX7zlMjnqr36/YME5O+5yWcR1Z5FrIsU1hZSEZpRr33cSJqphseKWz9IRuLzcJvR35jYdJCZi6fSbm1XLM+MTBR8zzaL7pBKYiuhUeSQyEjoyyDj3d+fFLHK8uyKnubU5HDxsyNpJWkqZPvJqOJQO9APtn1iSpxMbb92JN6LR2d1kKbMvI9wnqQECg8eEWTe2y7sdhkm8fYqieUeOtZMWfV+3W/mvwVG6/dSKRvJBXWCsqqy7hy/pWM/2k8e3L38PvR3085vKK0gVtw2QKARr2ANBVbspwdm6yyVU057BzcmS8nfcncyXOZ1GGSOqahKYiRvk599n+m/8OtfYRcxYKjC9iatbXBx+vpO3K87LhGvz3QOxDZRV7JtbuRjk5bpE0ZeVei/aPZdeMupnQXudj1nRDdkrWFQFMgsf71b5BsNprxM/kR4Su6SeVU5JBdITIvpv0xjdlrZmsM3smwK3cXA6MGqt7v70d/P6X9NTXHS49rJlODvYMprBLyDw8MfoCBUQMJ8Qnhht43APD15K9rnfeoDdfOREaDkfsH368WJtXUYK8PBwsOAqIP6zeTv1GXxwc4hVEDvbX9CnQtdJ22Tps18goxfiLzob6e/Pbs7QyNGapJo6wvSuef3Ipct3UWm6XB+3Pddm/eXvpH9sdoEDUC23O2t+qOOq5x90FRg8iuyFZTQF07IvWJ6MOuG3e5TWDXh66hXd2WKb1GFS2ZhrAvbx8SEnf1v4t+kf3U5dN6TFMf13d+RkenrdDmjbzieZ3Ik9+Rs4Pblt5GcnGyR+NRH5TwwXf7v3Nbl1qSWu95gZrsydtDtb1aNTy397sdgJTilJPaX7GlmL5f9G2yTCCAY8XH8DJ4se6adfSN6EtRVZF6oW2sHqXKXU2o2ZmJ42P0wSgZKa0urW2zWtmTt4cOwR3UrC3lu+NlcEo49Y1wpsy6evs6Om2VNm/kFcGoN7a9wfKU5bWOe2/7e6r32SW0y0m9lhKuWXpsqdu65zc+z382/eek9rs6bTUGycCwmGGAmGcAuGL+FSeM9VdYK7jjzzv4Ys8X6rKjhSL7ZPba2Sfl8daHY8XHSAhIIMg7iBCfECqsFaQWp2KQDOrndKpIksSCyxYw75J5mmUB3gGUWEoavL/MskxNaGbRFYtYdfUqzZiZA2fyxqg3+GDsBxpvX0enrdLmjbyPl4/6WMlvPhFdQ07Okw/yDmJg1ED1+dppa3n1/FfV5wuOLGjwPqcvnM7Huz5mZPxIgs3BgEjVVCiprtuY7cjZwfrj63l1y6tqaqGScmi1W+n/Zf+TvsOojdyKXNamr1WPUwlxHCw8SLhPuMYzPlU6BHdwa2wdYApgXfo69uXt87hNta3a48WxoKpAk7ETbA7WPAdxERnTfkyD5w90dForbd7Iu2p4783bW+u4vIo89fHJZkxIksSXk76kc7DoLhVsDmZChwnqerV4q57klOeoOvYj452Caa6TfZ7i/664TkBe+uulTPppEq9sfkUzZtDXgyivLq+56UlzyS+XUGmrVMMpSjrruvR16oWqKQk2B5NWmsbU36dq7lTKqssY+NVABn09iB8O/KDZRpZlCioL3Iy6js7pTps38q7szN3J8xue1/zw16avZUPGBgqrCukQ1IHPJnymTm6eLHMvnMvaaWvV5yumruDO/neSW5HbIBEzV4E1JRdf4fGzHgfEhaAuamaZpJWmkVeZ5zZO0Y45FapsVfxx9A/17kIJfbiGQJRU0KbEtVuUq+R0clGy2gj8uY3PaTz9cms5VbYq3cjrnHGcVkYe4LsD32m837uW3cWMpTPIKs9iVOIohsR41qhpCH4mP43HGuEboYYuavYsrYtt2dvUx0r+v8KYdmPwkrz4K+WvOveRXJzM+Pbj+ffZ/8bXy9lspU+4yGqZd7GIZ9dHsTOpKIn7lt9X64Xqq71f8diax9TnZoeqZ7fQbuqySlvTKnUC3NLnFjoGdwS0dzquwmggDL2CkvlTm5yCjs7pymlh5F2NGzjVA212m2Z5U4YShscOx8vgxW+HfwOEhz3/SK2dDgFhVBXCfbRKh1F+UfSO6M3CpIUelRgrrZXcvexujhUfI8ovisu7Xs7GazeqqpoK3cO6M6njJPble45fu/LM+mdYnrpc0wqx0lpJqUVkshRbijXjJ3aYCIhK0U8nfHrC/TcW7YPaq1ozipF/Yu0TPLjqQc24nTk76ftFX7ZlbVONvO7J65xpnBZGfv016/lswmfq84dWPcR7299zM45dQk4uq6Y+RPhGMKXbFDZlbsJis3Ddwut4Yu0TdW5TYinhup7XsXLqSo/l/oHegRRVFXHtH9cyZ90cjQ7+0aKj6l2Dks0iSZLHhtCdgjuRWZbpZqRroqwvrnKOu37h9Yz4dgSFlYV8ttv5GT894mlN4ZCi4jk4enCdr9FYKOms6aXp5FfmqxfUce3HsebqNdw36D517Jvb3lTDOrqR1znTOC2MvJfBi2h/Z252emk6/9vxP1VM7MtJX7Lpuk2MShzVpMdxVuxZVFgruPuvu+scl1GawcjvRlJtrybCN6JWvXJFWjevMo9fD//KVQuuUqs2XcMUrk2glcwW116k58SdA9StoFlUVcThwsPi+MqEpIIsy6r++/0r79eMd42Lg7jALLlyCe+Nea/W12hM4gPiCfMJ4/82/B9Pr38agLdHv81/R/2XEJ8Qbut7G+PajwPEXZHuyeucqZwWRh5E4cxvl/2mWfbJ7k8AkU1TM6TTVMcA2mrQVamr3HLV/0r5S+2eFGCqPSNnzvA5RPlq0wevnH8l4MwWenfMu4xpN0Zd3yu8FzP6zuC5kc54dJ+IPgSYAtS2egqV1kq1vd7b/7ytLle8XtcJXFetmE8nfErv8N5uxxsXENdsMgCSJHFpl0sBWJm6ksHRg90u4i+d+xL9I/uzOHmxevx6TF7nTOO0MfKg1TpRvDhovh+2p0rPfy3/F+/veF+z7PM9n6uPa2qluNI+qD1zL5zrtvzPY3+qnvywmGGaNFKDZODeQfdqGl1IkkTH4I4kFSdp9vP61te5Y9kd7M3by5/H/mRih4mE+4RTZCnCLtu54Ad3SeDXR73O0JihraKh9b8G/AsvSdy5eJIjMBlNarbN/CPz8fXybZaLvY5Oa+K0MvIAU7tNZVz7cTw5/ElAK0nc1NSme7ImbQ3f7v+WmxffjCzLGp2dExUOuYahFGatnMUXe78g0BSoKQarixj/GLXfqoLSVeuHAz+QX5mvFmRtzdqqSc00SiLl9KbeN7Uq6V1vozffXSQkJrqHdfc4xrWblB6q0TkTOe2M/JwRc/jvqP8S5hPGFxO/4P1x7594o0ZCkiReOV8UIrkWSRVbinlh4wtsydrC42tF/vtDQx7iybOeVNvd1cU58SKmvm36NmYPmw2IGPqJqmFdifaLVrOOFJTiLWXu4uy4sym1lJJUlMT0RdPVccqkakOUO5uL7mHd+f6i71W9n5rc1Psm9bGrBo6OzplC49Wft0IGRQ9q9tec2GEiEztMZHv2dpYkLwGcGvbglBBOCEhgTPsxHvdRkzdGvUF2eTYmg4lpPaZxtOgo3x/4vkHHFeUXRbm1nFJLKQHeAczdN5dFSYvU9ZM7TibSL5JeEb3ITnVeDEYnjsYqi5BHmG/r9ISV3gKeuLjzxfh4+TBr5Sxu63dbMx6Vjk7r4LQ28i2Jq+GpsFZo1rULbMf5iefXe18+Xj5qBo1BMvDk8CcJ9A5UZZbrgyKTnF2RjUEyuImpKeGOZ89+lpzyHK5aICR9p3SfwrHiY6xOW+3W6amtMK79OLZdv+2k5KV1dNo6upFvIryN3vx0yU8cKz7GrJWzNOtmDpx5yiJernng9UGZFM4uz8Zud1emVPR4wnzCCPMJExO1RUn4m/y5tse1nBN3Dh2CO5zSMbckuoHXOVM57WLyrYluod3oF+EuV9sY0goNRVFyzC7PZsrvU9Tliu5MTY19pXDMLtuRJKlNG3gdnTMZ3ZNvYlxlcodED2HOiDmNprfeEGL8YzBKRk0V7gdjP2B43HCSi5KJC4jTjH96xNP0DOupkVbW0dFpe+iefBMjSRIvnvsiADf3uVmTy9+cmI1mTTppv4h+nB1/NgbJQKcQ92MKNgczo98MTQ6+jo5O20P35JuBCztdyOSOk1u8gMjP5KdWsd4/+P4TjNbR0Tkd0N20ZqKlDTyAySAmH589+1mGxgxt4aPR0dFpDnQjfwahFAa5at3o6Oic3ujhmjOIy7tezuVdL2/pw9DR0WlGdE9eR0dH5zRGN/I6Ojo6pzG6kdfR0dE5jdGNvI6Ojs5pzCkZeUmSXpEkab8kSTslSfpFkqQQl3WzJUk6LEnSAUmSJtS1Hx0dHR2dpuFUPfk/gT6yLPcDDgKzASRJ6gVMA3oDE4H3JMnReUJHR0dHp9k4JSMvy/JSWXaIjcMGIMHx+FLgO1mWq2RZTgIOA8NO5bV0dHR0dBpOY8bkbwGULhTxQKrLujTHMh0dHR2dZuSExVCSJC0DPHWneEKW5d8cY54ArMA3ymYexsu17P92QOndViVJ0u4THZODYKCoEcY0dGxLjWvJ126K9xIB5LbAa+vnr3n3Wd/zXN99nk6fTWO+tucmxwCyLJ/SH3Aj8Dfg57JsNjDb5fkSYEQ99rWlAa/7YWOMaejYlhrXFo6xge+lXue6tb+X0+n8NdFrt8hvuo18No322nV9zqeaXTMReBS4RJblcpdV84FpkiSZJUnqCHQFNp3Ka3lgQSONaejYlhrXkq/dFO+lvrT293I6nb+m2mdjvvbp9Nk0xWu7ITmuAie3sSQdBsxAnmPRBlmW73SsewIRp7cC98uyvMjzXjT72yLLcvO3TdJpdvRzfWagn+fmoa7P+ZQEymRZ7lLHuueB5xu4yw9P5Xh02hT6uT4z0M9z81Dr53xKnryOjo6OTutGlzVoZiRJKj3B+pWSJOm3t20c/TyfGbSF86wbeR0dHZ3TmBYx8ie6+p3uSJI0SpKk312evyNJ0k0teEhNxpl8rvXzfGbQ2s+z7snr6OjonMa0mJGXJClAkqS/JEnaJknSLkmSLnUs7yBJ0j5Jkj6SJGmPJElLJUnybanj1Dl19HN9ZqCf59ZJS3rylcDlsiwPAi4AXpMkSZFD6Aq8K8tyb6AQuLKFjrGpsKL97H1a6kCaiTP1XOvnWT/PLU5LGnkJeEGSpJ3AMoSAWbRjXZIsy9sdj7cCHZr/8JqUY0AvR0VwMDCmpQ+oiTlTz7V+nvXz3OKcUjHUKXIdEAkMlmW5WpKkZJxXwCqXcTbgtLi1kyTJC6iSZTlVkqQfgJ3AIeCflj2yJueMOtf6edbPc8semZaWNPLBQLbjy3AB0L4Fj6W56A0cAZBl+RHgkZoDZFke1czH1BycaedaP8/6ecaxfFQzH5MbzW7klasfQpZ4gSRJW4DtwP7mPpbmRJKkO4F7gftb+liaizPxXOvnWT/PrY1mlzWQJKk/8JEsy3qnqNMc/VyfGejnuXXTrBOvjqvft8CTzfm6Os2Pfq7PDPTz3PrRBcp0dHR0TmOa1JOXJClRkqQVjkKIPZIk3edYHiZJ0p+SJB1y/A91LJckSXpLkqTDkiTtlCRpkMu+bnSMPyRJ0o1Nedw6DaeRz/ViSZIKXUvFdVoHjXWeJUkaIEnS34597JQk6eqWfF+nNfVtP3Uyf0AsMMjxOBA4CPQCXgYecyx/DHjJ8Xgyohm4BAwHNjqWhwFHHf9DHY9Dm/LY9b+WOdeOdWOAi4HfW/p96X9Nc56BbkBXx+M4IAMIaen3dzr+NaknL8tyhizL2xyPS4B9iAKJS4EvHMO+AC5zPL4U+FIWbABCJEmKBSYAf8qynC/LcgHwJzCxKY9dp2E04rlGluW/gJLmPH6d+tFY51mW5YOyLB9y7Oc4kI3IsddpZJpt4lWSpA7AQGAjEC3LcgaILw0Q5RgWD6S6bJbmWFbbcp1WyCmea502QmOdZ0mShgHeOHLOdRqXZjHykiQFAD8her0W1zXUwzK5juU6rYxGONc6bYDGOs+Ou7evgJtlWbY37lHqQDMYeUmSTIgvwzeyLP/sWJyl3Jo7/mc7lqcBiS6bJwDH61iu04popHOt08pprPMsSVIQ8AfwpCOUo/P/7d0xbsIwFIDh3ws75SIMHRiY4RIIRA/UrWNPwFC1W4dMXADBwMINmJgYOqSDXSkHSJro8X+SFyeyYll6iv3spANd765JwDtwruv6tXHpC/jbIbMBPhv165KRnwG3MvX7BhYppXHJ2i9KnQaixbHWgLU1zimlEfBBXq/f/dPjP6Yus7rAnDw1O5KPOR/I2fYJUJE/5lMBT+X+BLyR1+ZOwHOjrRfgUsq274y1pdOx3gNX4E5+E1z23T9Lu+MMrICfRhsHYNp3/yIWD0NJUmD+/k+SAjPIS1JgBnlJCswgL0mBGeQlKTCDvCQFZpCXpMAM8pIU2C/MeEZC10WZeAAAAABJRU5ErkJggg\u003d\u003d\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563519549961_1027502520",
      "id": "paragraph_1563519549961_1027502520",
      "dateCreated": "2019-07-19 14:59:09.961",
      "dateStarted": "2019-11-11 13:37:46.624",
      "dateFinished": "2019-11-11 13:37:47.187",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\nfrom bokeh.io import output_notebook\nimport bkzep\noutput_notebook(notebook_type\u003d\u0027zeppelin\u0027)\n\n\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:47.205",
      "config": {
        "enabled": true,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "results": {},
        "editorMode": "ace/mode/python",
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true
      },
      "settings": {
        "params": {
          "bdtMeta": {
            "inlay": {
              "state": {
                "currentPage": "Html"
              }
            }
          }
        },
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n"
          },
          {
            "type": "HTML",
            "data": "\n    \u003cdiv class\u003d\"bk-root\"\u003e\n        \u003ca href\u003d\"https://bokeh.pydata.org\" target\u003d\"_blank\" class\u003d\"bk-logo bk-logo-small bk-logo-notebook\"\u003e\u003c/a\u003e\n        \u003cspan id\u003d\"1001\"\u003eLoading BokehJS ...\u003c/span\u003e\n    \u003c/div\u003e\n\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript type\u003d\"text/javascript\"\u003e\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force \u003d true;\n\n  if (typeof root._bokeh_onload_callbacks \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_onload_callbacks \u003d [];\n    root._bokeh_is_loading \u003d undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_timeout \u003d Date.now() + 5000;\n    root._bokeh_failed_load \u003d false;\n  }\n\n  var NB_LOAD_WARNING \u003d {\u0027data\u0027: {\u0027text/html\u0027:\n     \"\u003cdiv style\u003d\u0027background-color: #fdd\u0027\u003e\\n\"+\n     \"\u003cp\u003e\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"\u003c/p\u003e\\n\"+\n     \"\u003cul\u003e\\n\"+\n     \"\u003cli\u003ere-rerun `output_notebook()` to attempt to load from CDN again, or\u003c/li\u003e\\n\"+\n     \"\u003cli\u003euse INLINE resources instead, as so:\u003c/li\u003e\\n\"+\n     \"\u003c/ul\u003e\\n\"+\n     \"\u003ccode\u003e\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources\u003dINLINE)\\n\"+\n     \"\u003c/code\u003e\\n\"+\n     \"\u003c/div\u003e\"}};\n\n  function display_loaded() {\n    var el \u003d document.getElementById(\"1001\");\n    if (el !\u003d null) {\n      el.textContent \u003d \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !\u003d\u003d undefined) {\n      if (el !\u003d null) {\n        el.textContent \u003d \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback !\u003d null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls \u003d\u003d null) css_urls \u003d [];\n    if (js_urls \u003d\u003d null) js_urls \u003d [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading \u003e 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls \u003d\u003d null || js_urls.length \u003d\u003d\u003d 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading \u003d css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (var i \u003d 0; i \u003c css_urls.length; i++) {\n      var url \u003d css_urls[i];\n      const element \u003d document.createElement(\"link\");\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.rel \u003d \"stylesheet\";\n      element.type \u003d \"text/css\";\n      element.href \u003d url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (var i \u003d 0; i \u003c js_urls.length; i++) {\n      var url \u003d js_urls[i];\n      var element \u003d document.createElement(\u0027script\u0027);\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.async \u003d false;\n      element.src \u003d url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };var element \u003d document.getElementById(\"1001\");\n  if (element \u003d\u003d null) {\n    console.error(\"Bokeh: ERROR: autoload.js configured with elementid \u00271001\u0027 but no matching script tag was found. \")\n    return false;\n  }\n\n  function inject_raw_css(css) {\n    const element \u003d document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls \u003d [\"https://cdn.pydata.org/bokeh/release/bokeh-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.3.4.min.js\"];\n  var css_urls \u003d [];\n\n  var inline_js \u003d [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    \n    function(Bokeh) {\n      \n    },\n    \n    function(Bokeh) {\n      \n      document.getElementById(\"1001\").textContent \u003d \"BokehJS is loading...\";\n\n    },\n    function(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    \n    if ((root.Bokeh !\u003d\u003d undefined) || (force \u003d\u003d\u003d true)) {\n      for (var i \u003d 0; i \u003c inline_js.length; i++) {\n        inline_js[i].call(root, root.Bokeh);\n      }if (force \u003d\u003d\u003d true) {\n        display_loaded();\n      }} else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load \u003d true;\n    } else if (force !\u003d\u003d true) {\n      var cell \u003d $(document.getElementById(\"1001\")).parents(\u0027.cell\u0027).data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));\u003c/script\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563519569081_-1109191358",
      "id": "paragraph_1563519569081_-1109191358",
      "dateCreated": "2019-07-19 14:59:29.081",
      "dateStarted": "2019-11-11 13:37:47.223",
      "dateFinished": "2019-11-11 13:37:47.676",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\nfrom bokeh.plotting import figure\nfrom bokeh.io import show,output_notebook\nimport bkzep\noutput_notebook(notebook_type\u003d\u0027zeppelin\u0027)\n\nf \u003d figure()\nf.line(x\u003d[1,2],y\u003d[3,4])\nshow(f)",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:47.732",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {
          "3": {
            "graph": {
              "mode": "table",
              "height": 589.006,
              "optionOpen": false
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n"
          },
          {
            "type": "HTML",
            "data": "\n    \u003cdiv class\u003d\"bk-root\"\u003e\n        \u003ca href\u003d\"https://bokeh.pydata.org\" target\u003d\"_blank\" class\u003d\"bk-logo bk-logo-small bk-logo-notebook\"\u003e\u003c/a\u003e\n        \u003cspan id\u003d\"1002\"\u003eLoading BokehJS ...\u003c/span\u003e\n    \u003c/div\u003e\n\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript type\u003d\"text/javascript\"\u003e\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force \u003d true;\n\n  if (typeof root._bokeh_onload_callbacks \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_onload_callbacks \u003d [];\n    root._bokeh_is_loading \u003d undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_timeout \u003d Date.now() + 5000;\n    root._bokeh_failed_load \u003d false;\n  }\n\n  var NB_LOAD_WARNING \u003d {\u0027data\u0027: {\u0027text/html\u0027:\n     \"\u003cdiv style\u003d\u0027background-color: #fdd\u0027\u003e\\n\"+\n     \"\u003cp\u003e\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"\u003c/p\u003e\\n\"+\n     \"\u003cul\u003e\\n\"+\n     \"\u003cli\u003ere-rerun `output_notebook()` to attempt to load from CDN again, or\u003c/li\u003e\\n\"+\n     \"\u003cli\u003euse INLINE resources instead, as so:\u003c/li\u003e\\n\"+\n     \"\u003c/ul\u003e\\n\"+\n     \"\u003ccode\u003e\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources\u003dINLINE)\\n\"+\n     \"\u003c/code\u003e\\n\"+\n     \"\u003c/div\u003e\"}};\n\n  function display_loaded() {\n    var el \u003d document.getElementById(\"1002\");\n    if (el !\u003d null) {\n      el.textContent \u003d \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !\u003d\u003d undefined) {\n      if (el !\u003d null) {\n        el.textContent \u003d \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback !\u003d null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls \u003d\u003d null) css_urls \u003d [];\n    if (js_urls \u003d\u003d null) js_urls \u003d [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading \u003e 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls \u003d\u003d null || js_urls.length \u003d\u003d\u003d 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading \u003d css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (var i \u003d 0; i \u003c css_urls.length; i++) {\n      var url \u003d css_urls[i];\n      const element \u003d document.createElement(\"link\");\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.rel \u003d \"stylesheet\";\n      element.type \u003d \"text/css\";\n      element.href \u003d url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (var i \u003d 0; i \u003c js_urls.length; i++) {\n      var url \u003d js_urls[i];\n      var element \u003d document.createElement(\u0027script\u0027);\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.async \u003d false;\n      element.src \u003d url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };var element \u003d document.getElementById(\"1002\");\n  if (element \u003d\u003d null) {\n    console.error(\"Bokeh: ERROR: autoload.js configured with elementid \u00271002\u0027 but no matching script tag was found. \")\n    return false;\n  }\n\n  function inject_raw_css(css) {\n    const element \u003d document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls \u003d [\"https://cdn.pydata.org/bokeh/release/bokeh-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.3.4.min.js\"];\n  var css_urls \u003d [];\n\n  var inline_js \u003d [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    \n    function(Bokeh) {\n      \n    },\n    \n    function(Bokeh) {\n      \n      document.getElementById(\"1002\").textContent \u003d \"BokehJS is loading...\";\n\n    },\n    function(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    \n    if ((root.Bokeh !\u003d\u003d undefined) || (force \u003d\u003d\u003d true)) {\n      for (var i \u003d 0; i \u003c inline_js.length; i++) {\n        inline_js[i].call(root, root.Bokeh);\n      }if (force \u003d\u003d\u003d true) {\n        display_loaded();\n      }} else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load \u003d true;\n    } else if (force !\u003d\u003d true) {\n      var cell \u003d $(document.getElementById(\"1002\")).parents(\u0027.cell\u0027).data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));\u003c/script\u003e\n"
          },
          {
            "type": "HTML",
            "data": "\n\n\n\n\n\n  \u003cdiv class\u003d\"bk-root\" id\u003d\"6c7cabf3-bfaa-473d-922c-11324a636a69\" data-root-id\u003d\"1003\"\u003e\u003c/div\u003e\n\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript type\u003d\"text/javascript\"\u003e(function(root) {\n  function embed_document(root) {\n    \n  var docs_json \u003d {\"ff57d2e1-b9e0-48b4-aece-5d83c3b22128\":{\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1012\",\"type\":\"LinearAxis\"}],\"center\":[{\"id\":\"1016\",\"type\":\"Grid\"},{\"id\":\"1021\",\"type\":\"Grid\"}],\"left\":[{\"id\":\"1017\",\"type\":\"LinearAxis\"}],\"renderers\":[{\"id\":\"1038\",\"type\":\"GlyphRenderer\"}],\"title\":{\"id\":\"1041\",\"type\":\"Title\"},\"toolbar\":{\"id\":\"1028\",\"type\":\"Toolbar\"},\"x_range\":{\"id\":\"1004\",\"type\":\"DataRange1d\"},\"x_scale\":{\"id\":\"1008\",\"type\":\"LinearScale\"},\"y_range\":{\"id\":\"1006\",\"type\":\"DataRange1d\"},\"y_scale\":{\"id\":\"1010\",\"type\":\"LinearScale\"}},\"id\":\"1003\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"overlay\":{\"id\":\"1048\",\"type\":\"BoxAnnotation\"}},\"id\":\"1024\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1025\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1026\",\"type\":\"ResetTool\"},{\"attributes\":{},\"id\":\"1027\",\"type\":\"HelpTool\"},{\"attributes\":{\"active_drag\":\"auto\",\"active_inspect\":\"auto\",\"active_multi\":null,\"active_scroll\":\"auto\",\"active_tap\":\"auto\",\"tools\":[{\"id\":\"1022\",\"type\":\"PanTool\"},{\"id\":\"1023\",\"type\":\"WheelZoomTool\"},{\"id\":\"1024\",\"type\":\"BoxZoomTool\"},{\"id\":\"1025\",\"type\":\"SaveTool\"},{\"id\":\"1026\",\"type\":\"ResetTool\"},{\"id\":\"1027\",\"type\":\"HelpTool\"}]},\"id\":\"1028\",\"type\":\"Toolbar\"},{\"attributes\":{\"callback\":null},\"id\":\"1004\",\"type\":\"DataRange1d\"},{\"attributes\":{\"data_source\":{\"id\":\"1035\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"1036\",\"type\":\"Line\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1037\",\"type\":\"Line\"},\"selection_glyph\":null,\"view\":{\"id\":\"1039\",\"type\":\"CDSView\"}},\"id\":\"1038\",\"type\":\"GlyphRenderer\"},{\"attributes\":{\"callback\":null},\"id\":\"1006\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1035\",\"type\":\"ColumnDataSource\"}},\"id\":\"1039\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1010\",\"type\":\"LinearScale\"},{\"attributes\":{\"formatter\":{\"id\":\"1043\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1013\",\"type\":\"BasicTicker\"}},\"id\":\"1012\",\"type\":\"LinearAxis\"},{\"attributes\":{\"callback\":null,\"data\":{\"x\":[1,2],\"y\":[3,4]},\"selected\":{\"id\":\"1046\",\"type\":\"Selection\"},\"selection_policy\":{\"id\":\"1047\",\"type\":\"UnionRenderers\"}},\"id\":\"1035\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1013\",\"type\":\"BasicTicker\"},{\"attributes\":{\"text\":\"\"},\"id\":\"1041\",\"type\":\"Title\"},{\"attributes\":{\"ticker\":{\"id\":\"1013\",\"type\":\"BasicTicker\"}},\"id\":\"1016\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1043\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"formatter\":{\"id\":\"1045\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1018\",\"type\":\"BasicTicker\"}},\"id\":\"1017\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1008\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1045\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1018\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1046\",\"type\":\"Selection\"},{\"attributes\":{\"dimension\":1,\"ticker\":{\"id\":\"1018\",\"type\":\"BasicTicker\"}},\"id\":\"1021\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1047\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":{\"value\":0.5},\"fill_color\":{\"value\":\"lightgrey\"},\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":{\"value\":1.0},\"line_color\":{\"value\":\"black\"},\"line_dash\":[4,4],\"line_width\":{\"value\":2},\"render_mode\":\"css\",\"right_units\":\"screen\",\"top_units\":\"screen\"},\"id\":\"1048\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1036\",\"type\":\"Line\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1037\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1022\",\"type\":\"PanTool\"},{\"attributes\":{},\"id\":\"1023\",\"type\":\"WheelZoomTool\"}],\"root_ids\":[\"1003\"]},\"title\":\"Bokeh Application\",\"version\":\"1.3.4\"}};\n  var render_items \u003d [{\"docid\":\"ff57d2e1-b9e0-48b4-aece-5d83c3b22128\",\"roots\":{\"1003\":\"6c7cabf3-bfaa-473d-922c-11324a636a69\"}}];\n  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n\n  }\n  if (root.Bokeh !\u003d\u003d undefined) {\n    embed_document(root);\n  } else {\n    var attempts \u003d 0;\n    var timer \u003d setInterval(function(root) {\n      if (root.Bokeh !\u003d\u003d undefined) {\n        embed_document(root);\n        clearInterval(timer);\n      }\n      attempts++;\n      if (attempts \u003e 100) {\n        console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n        clearInterval(timer);\n      }\n    }, 10, root)\n  }\n})(window);\u003c/script\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563519693116_-1748043663",
      "id": "paragraph_1563519693116_-1748043663",
      "dateCreated": "2019-07-19 15:01:33.116",
      "dateStarted": "2019-11-11 13:37:47.740",
      "dateFinished": "2019-11-11 13:37:47.916",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\nfrom bokeh.server.server import Server\nfrom bokeh.application import Application\nfrom bokeh.application.handlers.function import FunctionHandler\nfrom bokeh.plotting import figure, ColumnDataSource\n\ndef make_document(doc):\n    fig \u003d figure(title\u003d\u0027Line plot!\u0027, sizing_mode\u003d\u0027scale_width\u0027)\n    fig.line(x\u003d[1, 2, 3], y\u003d[1, 4, 9])\n\n    doc.title \u003d \"Hello, world!\"\n    doc.add_root(fig)\n\n# Set up the Application\nhandler \u003d FunctionHandler(make_document)\napp \u003d Application(handler)\n\ndoc \u003d app.create_document()\nshow(app, notebook_url\u003d\u0027localhost:8084\u0027)\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:47.946",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\u0027bokeh_class\u0027 id\u003d\u0027e382518b960c47b283a7f1cc2334a621\u0027\u003e\n\u003cscript src\u003d\"http://localhost:57788/autoload.js?bokeh-autoload-element\u003d1157\u0026bokeh-absolute-url\u003dhttp://localhost:57788\" id\u003d\"1157\"\u003e\u003c/script\u003e\u003c/div\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563519615063_260468360",
      "id": "paragraph_1563519615063_260468360",
      "dateCreated": "2019-07-19 15:00:15.063",
      "dateStarted": "2019-11-11 13:37:48.254",
      "dateFinished": "2019-11-11 13:37:48.431",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\nfrom bokeh.server.server import Server\nfrom bokeh.application import Application\nfrom bokeh.application.handlers.function import FunctionHandler\nfrom bokeh.plotting import figure, ColumnDataSource\n\nimport random\n\ndef make_document(doc):\n    source \u003d ColumnDataSource({\u0027x\u0027: [], \u0027y\u0027: [], \u0027color\u0027: []})\n\n    def update():\n        new \u003d {\u0027x\u0027: [random.random()],\n               \u0027y\u0027: [random.random()],\n               \u0027color\u0027: [random.choice([\u0027red\u0027, \u0027blue\u0027, \u0027green\u0027])]}\n        source.stream(new)\n\n    doc.add_periodic_callback(update, 100)\n\n    fig \u003d figure(title\u003d\u0027Streaming Circle Plot!\u0027, sizing_mode\u003d\u0027scale_width\u0027,\n                 x_range\u003d[0, 1], y_range\u003d[0, 1])\n    fig.circle(source\u003dsource, x\u003d\u0027x\u0027, y\u003d\u0027y\u0027, color\u003d\u0027color\u0027, size\u003d10)\n\n    doc.title \u003d \"Now with live updating!\"\n    doc.add_root(fig)\n    \n\n# Set up the Application\nhandler \u003d FunctionHandler(make_document)\napp \u003d Application(handler)\n\ndoc \u003d app.create_document()\nshow(app, notebook_url\u003d\u0027localhost:8084\u0027)",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:48.466",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\u0027bokeh_class\u0027 id\u003d\u00277c9b4f23cd094f2f8c7921d077e021a1\u0027\u003e\n\u003cscript src\u003d\"http://localhost:57791/autoload.js?bokeh-autoload-element\u003d1286\u0026bokeh-absolute-url\u003dhttp://localhost:57791\" id\u003d\"1286\"\u003e\u003c/script\u003e\u003c/div\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563522019204_898576242",
      "id": "paragraph_1563522019204_898576242",
      "dateCreated": "2019-07-19 15:40:19.205",
      "dateStarted": "2019-11-11 13:37:48.755",
      "dateFinished": "2019-11-11 13:37:48.816",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\nfrom bokeh.server.server import Server\nfrom bokeh.application import Application\nfrom bokeh.application.handlers.function import FunctionHandler\nfrom bokeh.plotting import figure, ColumnDataSource\n\nimport random\n\nfrom time import time\nfrom bokeh.models.ranges import DataRange1d\n\ndef make_document(doc):\n    source \u003d ColumnDataSource({\u0027time\u0027: [time(), time() + 1],\n                               \u0027idle\u0027: [0, 0.1],\n                               \u0027saturated\u0027: [0, 0.1]})\n\n    x_range \u003d DataRange1d(follow\u003d\u0027end\u0027, follow_interval\u003d20000, range_padding\u003d0)\n\n    fig \u003d figure(title\u003d\"Idle and Saturated Workers Over Time\",\n                 x_axis_type\u003d\u0027datetime\u0027, y_range\u003d[-0.1, 10 + 0.1],\n                 height\u003d150, tools\u003d\u0027\u0027, x_range\u003dx_range, **kwargs)\n    fig.line(source\u003dsource, x\u003d\u0027time\u0027, y\u003d\u0027idle\u0027, color\u003d\u0027red\u0027)\n    fig.line(source\u003dsource, x\u003d\u0027time\u0027, y\u003d\u0027saturated\u0027, color\u003d\u0027green\u0027)\n    fig.yaxis.minor_tick_line_color \u003d None\n\n    fig.add_tools(\n        ResetTool(reset_size\u003dFalse),\n        PanTool(dimensions\u003d\"width\"),\n        WheelZoomTool(dimensions\u003d\"width\")\n    )\n\n    doc.add_root(fig)\n\n    def update():\n        result \u003d {\u0027time\u0027: [time() * 1000],\n                  \u0027idle\u0027: [2],\n                  \u0027saturated\u0027: [10]}\n        source.stream(result, 10000)\n\n    doc.add_periodic_callback(update, 100)\n    \n# Set up the Application\nhandler \u003d FunctionHandler(make_document)\napp \u003d Application(handler)\n\ndoc \u003d app.create_document()\nshow(app, notebook_url\u003d\u0027localhost:8084\u0027)\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:37:48.888",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)\n\u001b[0;32m\u003cipython-input-10-5c3f9516aa96\u003e\u001b[0m in \u001b[0;36m\u003cmodule\u003e\u001b[0;34m\u001b[0m\n\u001b[1;32m     43\u001b[0m \u001b[0mapp\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mApplication\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mhandler\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     44\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 45\u001b[0;31m \u001b[0mdoc\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mapp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate_document\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     46\u001b[0m \u001b[0mshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mapp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnotebook_url\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027localhost:8084\u0027\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/bokeh/application/application.py\u001b[0m in \u001b[0;36mcreate_document\u001b[0;34m(self)\u001b[0m\n\u001b[1;32m    165\u001b[0m         \u0027\u0027\u0027\n\u001b[1;32m    166\u001b[0m         \u001b[0mdoc\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0mDocument\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 167\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0minitialize_document\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdoc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    168\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mdoc\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    169\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/bokeh/application/application.py\u001b[0m in \u001b[0;36minitialize_document\u001b[0;34m(self, doc)\u001b[0m\n\u001b[1;32m    176\u001b[0m             \u001b[0;31m# and build a composite error display. In develop mode, we want to\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    177\u001b[0m             \u001b[0;31m# somehow get these errors to the client.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--\u003e 178\u001b[0;31m             \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodify_document\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdoc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    179\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfailed\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    180\u001b[0m                 \u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merror\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Error running application handler %r: %s %s \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mh\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merror\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mh\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0merror_detail\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m~/anaconda3/lib/python3.7/site-packages/bokeh/application/handlers/function.py\u001b[0m in \u001b[0;36mmodify_document\u001b[0;34m(self, doc)\u001b[0m\n\u001b[1;32m    131\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    132\u001b[0m         \u0027\u0027\u0027\n\u001b[0;32m--\u003e 133\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_func\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdoc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    134\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_safe_to_fork\u001b[0m \u001b[0;34m\u003d\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    135\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;32m\u003cipython-input-10-5c3f9516aa96\u003e\u001b[0m in \u001b[0;36mmake_document\u001b[0;34m(doc)\u001b[0m\n\u001b[1;32m     18\u001b[0m     fig \u003d figure(title\u003d\"Idle and Saturated Workers Over Time\",\n\u001b[1;32m     19\u001b[0m                  \u001b[0mx_axis_type\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027datetime\u0027\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_range\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m-\u001b[0m\u001b[0;36m0.1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m10\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m0.1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---\u003e 20\u001b[0;31m                  height\u003d150, tools\u003d\u0027\u0027, x_range\u003dx_range, **kwargs)\n\u001b[0m\u001b[1;32m     21\u001b[0m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msource\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0msource\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027time\u0027\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027idle\u0027\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027red\u0027\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     22\u001b[0m     \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mline\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msource\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0msource\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mx\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027time\u0027\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027saturated\u0027\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m\u003d\u001b[0m\u001b[0;34m\u0027green\u0027\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\n\u001b[0;31mNameError\u001b[0m: name \u0027kwargs\u0027 is not defined"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563345330443_-381365402",
      "id": "paragraph_1563345330443_-381365402",
      "dateCreated": "2019-07-17 14:35:30.443",
      "dateStarted": "2019-11-11 13:37:49.259",
      "dateFinished": "2019-11-11 13:37:49.539",
      "status": "ERROR"
    },
    {
      "text": "%python.ipython\n\nfrom bokeh.io import output_notebook\nimport bkzep\noutput_notebook(notebook_type\u003d\u0027zeppelin\u0027)\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:38:00.900",
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/python",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n"
          },
          {
            "type": "HTML",
            "data": "\n    \u003cdiv class\u003d\"bk-root\"\u003e\n        \u003ca href\u003d\"https://bokeh.pydata.org\" target\u003d\"_blank\" class\u003d\"bk-logo bk-logo-small bk-logo-notebook\"\u003e\u003c/a\u003e\n        \u003cspan id\u003d\"1482\"\u003eLoading BokehJS ...\u003c/span\u003e\n    \u003c/div\u003e\n\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript type\u003d\"text/javascript\"\u003e\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force \u003d true;\n\n  if (typeof root._bokeh_onload_callbacks \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_onload_callbacks \u003d [];\n    root._bokeh_is_loading \u003d undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_timeout \u003d Date.now() + 5000;\n    root._bokeh_failed_load \u003d false;\n  }\n\n  var NB_LOAD_WARNING \u003d {\u0027data\u0027: {\u0027text/html\u0027:\n     \"\u003cdiv style\u003d\u0027background-color: #fdd\u0027\u003e\\n\"+\n     \"\u003cp\u003e\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"\u003c/p\u003e\\n\"+\n     \"\u003cul\u003e\\n\"+\n     \"\u003cli\u003ere-rerun `output_notebook()` to attempt to load from CDN again, or\u003c/li\u003e\\n\"+\n     \"\u003cli\u003euse INLINE resources instead, as so:\u003c/li\u003e\\n\"+\n     \"\u003c/ul\u003e\\n\"+\n     \"\u003ccode\u003e\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources\u003dINLINE)\\n\"+\n     \"\u003c/code\u003e\\n\"+\n     \"\u003c/div\u003e\"}};\n\n  function display_loaded() {\n    var el \u003d document.getElementById(\"1482\");\n    if (el !\u003d null) {\n      el.textContent \u003d \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !\u003d\u003d undefined) {\n      if (el !\u003d null) {\n        el.textContent \u003d \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback !\u003d null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls \u003d\u003d null) css_urls \u003d [];\n    if (js_urls \u003d\u003d null) js_urls \u003d [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading \u003e 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls \u003d\u003d null || js_urls.length \u003d\u003d\u003d 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading \u003d css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (var i \u003d 0; i \u003c css_urls.length; i++) {\n      var url \u003d css_urls[i];\n      const element \u003d document.createElement(\"link\");\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.rel \u003d \"stylesheet\";\n      element.type \u003d \"text/css\";\n      element.href \u003d url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (var i \u003d 0; i \u003c js_urls.length; i++) {\n      var url \u003d js_urls[i];\n      var element \u003d document.createElement(\u0027script\u0027);\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.async \u003d false;\n      element.src \u003d url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };var element \u003d document.getElementById(\"1482\");\n  if (element \u003d\u003d null) {\n    console.error(\"Bokeh: ERROR: autoload.js configured with elementid \u00271482\u0027 but no matching script tag was found. \")\n    return false;\n  }\n\n  function inject_raw_css(css) {\n    const element \u003d document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls \u003d [\"https://cdn.pydata.org/bokeh/release/bokeh-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.3.4.min.js\"];\n  var css_urls \u003d [];\n\n  var inline_js \u003d [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    \n    function(Bokeh) {\n      \n    },\n    \n    function(Bokeh) {\n      \n      document.getElementById(\"1482\").textContent \u003d \"BokehJS is loading...\";\n\n    },\n    function(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    \n    if ((root.Bokeh !\u003d\u003d undefined) || (force \u003d\u003d\u003d true)) {\n      for (var i \u003d 0; i \u003c inline_js.length; i++) {\n        inline_js[i].call(root, root.Bokeh);\n      }if (force \u003d\u003d\u003d true) {\n        display_loaded();\n      }} else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load \u003d true;\n    } else if (force !\u003d\u003d true) {\n      var cell \u003d $(document.getElementById(\"1482\")).parents(\u0027.cell\u0027).data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));\u003c/script\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1562656976404_1822092882",
      "id": "paragraph_1562656976404_1822092882",
      "dateCreated": "2019-07-09 15:22:56.404",
      "dateStarted": "2019-11-11 13:38:00.906",
      "dateFinished": "2019-11-11 13:38:00.972",
      "status": "FINISHED"
    },
    {
      "text": "%python.ipython\n\nfrom bokeh.plotting import figure\nfrom bokeh.io import show,output_notebook\nimport bkzep\noutput_notebook(notebook_type\u003d\u0027zeppelin\u0027)\n\nf \u003d figure()\nf.line(x\u003d[1,2],y\u003d[3,4])\nshow(f)\n",
      "user": "anonymous",
      "dateUpdated": "2019-11-11 13:38:02.755",
      "config": {
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionSupport": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\n"
          },
          {
            "type": "HTML",
            "data": "\n    \u003cdiv class\u003d\"bk-root\"\u003e\n        \u003ca href\u003d\"https://bokeh.pydata.org\" target\u003d\"_blank\" class\u003d\"bk-logo bk-logo-small bk-logo-notebook\"\u003e\u003c/a\u003e\n        \u003cspan id\u003d\"1483\"\u003eLoading BokehJS ...\u003c/span\u003e\n    \u003c/div\u003e\n\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript type\u003d\"text/javascript\"\u003e\n(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  var force \u003d true;\n\n  if (typeof root._bokeh_onload_callbacks \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_onload_callbacks \u003d [];\n    root._bokeh_is_loading \u003d undefined;\n  }\n\n  \n\n  \n  if (typeof (root._bokeh_timeout) \u003d\u003d\u003d \"undefined\" || force \u003d\u003d\u003d true) {\n    root._bokeh_timeout \u003d Date.now() + 5000;\n    root._bokeh_failed_load \u003d false;\n  }\n\n  var NB_LOAD_WARNING \u003d {\u0027data\u0027: {\u0027text/html\u0027:\n     \"\u003cdiv style\u003d\u0027background-color: #fdd\u0027\u003e\\n\"+\n     \"\u003cp\u003e\\n\"+\n     \"BokehJS does not appear to have successfully loaded. If loading BokehJS from CDN, this \\n\"+\n     \"may be due to a slow or bad network connection. Possible fixes:\\n\"+\n     \"\u003c/p\u003e\\n\"+\n     \"\u003cul\u003e\\n\"+\n     \"\u003cli\u003ere-rerun `output_notebook()` to attempt to load from CDN again, or\u003c/li\u003e\\n\"+\n     \"\u003cli\u003euse INLINE resources instead, as so:\u003c/li\u003e\\n\"+\n     \"\u003c/ul\u003e\\n\"+\n     \"\u003ccode\u003e\\n\"+\n     \"from bokeh.resources import INLINE\\n\"+\n     \"output_notebook(resources\u003dINLINE)\\n\"+\n     \"\u003c/code\u003e\\n\"+\n     \"\u003c/div\u003e\"}};\n\n  function display_loaded() {\n    var el \u003d document.getElementById(\"1483\");\n    if (el !\u003d null) {\n      el.textContent \u003d \"BokehJS is loading...\";\n    }\n    if (root.Bokeh !\u003d\u003d undefined) {\n      if (el !\u003d null) {\n        el.textContent \u003d \"BokehJS \" + root.Bokeh.version + \" successfully loaded.\";\n      }\n    } else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(display_loaded, 100)\n    }\n  }\n\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback !\u003d null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, callback) {\n    if (css_urls \u003d\u003d null) css_urls \u003d [];\n    if (js_urls \u003d\u003d null) js_urls \u003d [];\n\n    root._bokeh_onload_callbacks.push(callback);\n    if (root._bokeh_is_loading \u003e 0) {\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    }\n    if (js_urls \u003d\u003d null || js_urls.length \u003d\u003d\u003d 0) {\n      run_callbacks();\n      return null;\n    }\n    console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n    root._bokeh_is_loading \u003d css_urls.length + js_urls.length;\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n\n    function on_error() {\n      console.error(\"failed to load \" + url);\n    }\n\n    for (var i \u003d 0; i \u003c css_urls.length; i++) {\n      var url \u003d css_urls[i];\n      const element \u003d document.createElement(\"link\");\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.rel \u003d \"stylesheet\";\n      element.type \u003d \"text/css\";\n      element.href \u003d url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }\n\n    for (var i \u003d 0; i \u003c js_urls.length; i++) {\n      var url \u003d js_urls[i];\n      var element \u003d document.createElement(\u0027script\u0027);\n      element.onload \u003d on_load;\n      element.onerror \u003d on_error;\n      element.async \u003d false;\n      element.src \u003d url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n  };var element \u003d document.getElementById(\"1483\");\n  if (element \u003d\u003d null) {\n    console.error(\"Bokeh: ERROR: autoload.js configured with elementid \u00271483\u0027 but no matching script tag was found. \")\n    return false;\n  }\n\n  function inject_raw_css(css) {\n    const element \u003d document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  var js_urls \u003d [\"https://cdn.pydata.org/bokeh/release/bokeh-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-widgets-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-tables-1.3.4.min.js\", \"https://cdn.pydata.org/bokeh/release/bokeh-gl-1.3.4.min.js\"];\n  var css_urls \u003d [];\n\n  var inline_js \u003d [\n    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\n    \n    function(Bokeh) {\n      \n    },\n    \n    function(Bokeh) {\n      \n      document.getElementById(\"1483\").textContent \u003d \"BokehJS is loading...\";\n\n    },\n    function(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    \n    if ((root.Bokeh !\u003d\u003d undefined) || (force \u003d\u003d\u003d true)) {\n      for (var i \u003d 0; i \u003c inline_js.length; i++) {\n        inline_js[i].call(root, root.Bokeh);\n      }if (force \u003d\u003d\u003d true) {\n        display_loaded();\n      }} else if (Date.now() \u003c root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load \u003d true;\n    } else if (force !\u003d\u003d true) {\n      var cell \u003d $(document.getElementById(\"1483\")).parents(\u0027.cell\u0027).data().cell;\n      cell.output_area.append_execute_result(NB_LOAD_WARNING)\n    }\n\n  }\n\n  if (root._bokeh_is_loading \u003d\u003d\u003d 0) {\n    console.debug(\"Bokeh: BokehJS loaded, going straight to plotting\");\n    run_inline_js();\n  } else {\n    load_libs(css_urls, js_urls, function() {\n      console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n      run_inline_js();\n    });\n  }\n}(window));\u003c/script\u003e\n"
          },
          {
            "type": "HTML",
            "data": "\n\n\n\n\n\n  \u003cdiv class\u003d\"bk-root\" id\u003d\"9299d0d8-81b8-4329-bb68-83c987fd96ea\" data-root-id\u003d\"1484\"\u003e\u003c/div\u003e\n\n"
          },
          {
            "type": "HTML",
            "data": "\u003cscript type\u003d\"text/javascript\"\u003e(function(root) {\n  function embed_document(root) {\n    \n  var docs_json \u003d {\"b5a0e438-6f77-44b8-85d2-174f89c770fb\":{\"roots\":{\"references\":[{\"attributes\":{\"below\":[{\"id\":\"1493\",\"type\":\"LinearAxis\"}],\"center\":[{\"id\":\"1497\",\"type\":\"Grid\"},{\"id\":\"1502\",\"type\":\"Grid\"}],\"left\":[{\"id\":\"1498\",\"type\":\"LinearAxis\"}],\"renderers\":[{\"id\":\"1519\",\"type\":\"GlyphRenderer\"}],\"title\":{\"id\":\"1522\",\"type\":\"Title\"},\"toolbar\":{\"id\":\"1509\",\"type\":\"Toolbar\"},\"x_range\":{\"id\":\"1485\",\"type\":\"DataRange1d\"},\"x_scale\":{\"id\":\"1489\",\"type\":\"LinearScale\"},\"y_range\":{\"id\":\"1487\",\"type\":\"DataRange1d\"},\"y_scale\":{\"id\":\"1491\",\"type\":\"LinearScale\"}},\"id\":\"1484\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{},\"id\":\"1504\",\"type\":\"WheelZoomTool\"},{\"attributes\":{\"overlay\":{\"id\":\"1529\",\"type\":\"BoxAnnotation\"}},\"id\":\"1505\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1506\",\"type\":\"SaveTool\"},{\"attributes\":{\"line_alpha\":0.1,\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1518\",\"type\":\"Line\"},{\"attributes\":{},\"id\":\"1507\",\"type\":\"ResetTool\"},{\"attributes\":{\"callback\":null,\"data\":{\"x\":[1,2],\"y\":[3,4]},\"selected\":{\"id\":\"1527\",\"type\":\"Selection\"},\"selection_policy\":{\"id\":\"1528\",\"type\":\"UnionRenderers\"}},\"id\":\"1516\",\"type\":\"ColumnDataSource\"},{\"attributes\":{},\"id\":\"1508\",\"type\":\"HelpTool\"},{\"attributes\":{},\"id\":\"1524\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"active_drag\":\"auto\",\"active_inspect\":\"auto\",\"active_multi\":null,\"active_scroll\":\"auto\",\"active_tap\":\"auto\",\"tools\":[{\"id\":\"1503\",\"type\":\"PanTool\"},{\"id\":\"1504\",\"type\":\"WheelZoomTool\"},{\"id\":\"1505\",\"type\":\"BoxZoomTool\"},{\"id\":\"1506\",\"type\":\"SaveTool\"},{\"id\":\"1507\",\"type\":\"ResetTool\"},{\"id\":\"1508\",\"type\":\"HelpTool\"}]},\"id\":\"1509\",\"type\":\"Toolbar\"},{\"attributes\":{\"callback\":null},\"id\":\"1487\",\"type\":\"DataRange1d\"},{\"attributes\":{\"callback\":null},\"id\":\"1485\",\"type\":\"DataRange1d\"},{\"attributes\":{\"source\":{\"id\":\"1516\",\"type\":\"ColumnDataSource\"}},\"id\":\"1520\",\"type\":\"CDSView\"},{\"attributes\":{},\"id\":\"1489\",\"type\":\"LinearScale\"},{\"attributes\":{},\"id\":\"1491\",\"type\":\"LinearScale\"},{\"attributes\":{\"formatter\":{\"id\":\"1524\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1494\",\"type\":\"BasicTicker\"}},\"id\":\"1493\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1494\",\"type\":\"BasicTicker\"},{\"attributes\":{\"text\":\"\"},\"id\":\"1522\",\"type\":\"Title\"},{\"attributes\":{\"ticker\":{\"id\":\"1494\",\"type\":\"BasicTicker\"}},\"id\":\"1497\",\"type\":\"Grid\"},{\"attributes\":{\"formatter\":{\"id\":\"1526\",\"type\":\"BasicTickFormatter\"},\"ticker\":{\"id\":\"1499\",\"type\":\"BasicTicker\"}},\"id\":\"1498\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1499\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1526\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{\"dimension\":1,\"ticker\":{\"id\":\"1499\",\"type\":\"BasicTicker\"}},\"id\":\"1502\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1527\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1528\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"line_color\":\"#1f77b4\",\"x\":{\"field\":\"x\"},\"y\":{\"field\":\"y\"}},\"id\":\"1517\",\"type\":\"Line\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":{\"value\":0.5},\"fill_color\":{\"value\":\"lightgrey\"},\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":{\"value\":1.0},\"line_color\":{\"value\":\"black\"},\"line_dash\":[4,4],\"line_width\":{\"value\":2},\"render_mode\":\"css\",\"right_units\":\"screen\",\"top_units\":\"screen\"},\"id\":\"1529\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"data_source\":{\"id\":\"1516\",\"type\":\"ColumnDataSource\"},\"glyph\":{\"id\":\"1517\",\"type\":\"Line\"},\"hover_glyph\":null,\"muted_glyph\":null,\"nonselection_glyph\":{\"id\":\"1518\",\"type\":\"Line\"},\"selection_glyph\":null,\"view\":{\"id\":\"1520\",\"type\":\"CDSView\"}},\"id\":\"1519\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1503\",\"type\":\"PanTool\"}],\"root_ids\":[\"1484\"]},\"title\":\"Bokeh Application\",\"version\":\"1.3.4\"}};\n  var render_items \u003d [{\"docid\":\"b5a0e438-6f77-44b8-85d2-174f89c770fb\",\"roots\":{\"1484\":\"9299d0d8-81b8-4329-bb68-83c987fd96ea\"}}];\n  root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n\n  }\n  if (root.Bokeh !\u003d\u003d undefined) {\n    embed_document(root);\n  } else {\n    var attempts \u003d 0;\n    var timer \u003d setInterval(function(root) {\n      if (root.Bokeh !\u003d\u003d undefined) {\n        embed_document(root);\n        clearInterval(timer);\n      }\n      attempts++;\n      if (attempts \u003e 100) {\n        console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n        clearInterval(timer);\n      }\n    }, 10, root)\n  }\n})(window);\u003c/script\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1563182178551_1175002121",
      "id": "paragraph_1563182178551_1175002121",
      "dateCreated": "2019-07-15 17:16:18.552",
      "dateStarted": "2019-11-11 13:38:02.762",
      "dateFinished": "2019-11-11 13:38:02.832",
      "status": "FINISHED"
    },
    {
      "text": "%angular\n\n\u003cdiv\u003ehello\u003c/div\u003e\n",
      "user": "anonymous",
      "dateUpdated": "2019-07-05 12:43:53.181",
      "config": {
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/undefined",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\u003cdiv\u003ehello\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1562301788234_2006786430",
      "id": "paragraph_1562301788234_2006786430",
      "dateCreated": "2019-07-05 12:43:08.234",
      "dateStarted": "2019-07-05 12:43:53.181",
      "dateFinished": "2019-07-05 12:43:54.193",
      "status": "FINISHED"
    },
    {
      "text": "%sh.terminal\n\npwd\n",
      "user": "anonymous",
      "dateUpdated": "2019-07-05 17:24:55.575",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "editorHide": true,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\n\u003cdiv class\u003d\"row\" style\u003d\"width:100%\"\u003e\n  \u003cdiv class\u003d\"col-md-12\" ng-switch\u003dTERMINAL_SOCKET_STATUS\u003e\n    \u003cb\u003eTerminal - JeffdeMacBook-Pro.local (0.0.0.0)\u003c/b\u003e\n    \u003cb style\u003d\"color: #999; margin-left:10px;\"\u003eSTATUS: \u003c/b\u003e\n    \u003ci ng-switch-when\u003d\u0027TERMINAL_SOCKET_CONNECT\u0027 ng-style\u003d\"{\u0027color\u0027:\u0027green\u0027}\"\u003eCONNECTED\u003c/i\u003e\n    \u003ci ng-switch-when\u003d\u0027TERMINAL_SOCKET_CLOSE\u0027 ng-style\u003d\"{\u0027color\u0027:\u0027red\u0027}\"\u003eDISCONNECTED\u003c/i\u003e\n    \u003ci ng-switch-default ng-style\u003d\"{\u0027color\u0027:\u0027red\u0027}\"\u003eERROR\u003c/i\u003e\n    \u003ca ng-if\u003d\"TERMINAL_SOCKET_STATUS!\u003d\u0027TERMINAL_SOCKET_CONNECT\u0027\" class\u003d\"fa fa-info-circle interpreter-binding-mode-info-link\" aria-hidden\u003d\"true\" tooltip-placement\u003d\"bottom\" uib-tooltip\u003d\"Please run this paragraph again\"\u003e\u003c/a\u003e\n\n    \u003c!--button class\u003d\"btn btn-default btn-xs\" style\u003d\"margin-left:40px;\"\n      ng-click\u003d\"\" tooltip-placement\u003d\"top\" uib-tooltip\u003d\"upload file to host\"\u003e\u003cspan class\u003d\"icon-plus shortcut-icon\"\u003e\u003c/span\u003e Upload File\n    \u003c/button\u003e\n    \u003cbutton class\u003d\"btn btn-default btn-xs\" style\u003d\"margin-left:4px;\"\n      ng-click\u003d\"\" tooltip-placement\u003d\"top\" uib-tooltip\u003d\"download file from host\"\u003e \u003cspan class\u003d\"icon-arrow-down shortcut-icon\"\u003e\u003c/span\u003e Download File\n    \u003c/button--\u003e\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003chr style\u003d\"margin-top: 10px; margin-bottom: 10px;\"/\u003e\n\n\u003cform style\u003d\"width:100%\"\u003e\n  \u003ciframe src\u003d\"http://0.0.0.0:50143?noteId\u003d2E6SSZK4P\u0026paragraphId\u003dparagraph_1561512778685_-237320298\u0026t\u003d1562318697468\" height\u003d\"400\" width\u003d\"100%\" frameborder\u003d\"0\" scrolling\u003d\"0\"\u003e\u003c/iframe\u003e\n\u003c/form\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1561512778685_-237320298",
      "id": "paragraph_1561512778685_-237320298",
      "dateCreated": "2019-06-26 09:32:58.685",
      "dateStarted": "2019-07-05 17:24:55.607",
      "dateFinished": "2019-07-05 17:24:57.570",
      "status": "FINISHED"
    },
    {
      "text": "%sh.terminal\n\npwd\n\nwhoami\n\n",
      "user": "anonymous",
      "dateUpdated": "2019-07-05 17:25:08.173",
      "config": {
        "editorSetting": {
          "language": "sh",
          "editOnDblClick": false,
          "completionSupport": false
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh",
        "fontSize": 9.0,
        "runOnSelectionChange": true,
        "title": false,
        "checkEmpty": true,
        "results": {},
        "enabled": true,
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "ANGULAR",
            "data": "\n\u003cdiv class\u003d\"row\" style\u003d\"width:100%\"\u003e\n  \u003cdiv class\u003d\"col-md-12\" ng-switch\u003dTERMINAL_SOCKET_STATUS\u003e\n    \u003cb\u003eTerminal - JeffdeMacBook-Pro.local (0.0.0.0)\u003c/b\u003e\n    \u003cb style\u003d\"color: #999; margin-left:10px;\"\u003eSTATUS: \u003c/b\u003e\n    \u003ci ng-switch-when\u003d\u0027TERMINAL_SOCKET_CONNECT\u0027 ng-style\u003d\"{\u0027color\u0027:\u0027green\u0027}\"\u003eCONNECTED\u003c/i\u003e\n    \u003ci ng-switch-when\u003d\u0027TERMINAL_SOCKET_CLOSE\u0027 ng-style\u003d\"{\u0027color\u0027:\u0027red\u0027}\"\u003eDISCONNECTED\u003c/i\u003e\n    \u003ci ng-switch-default ng-style\u003d\"{\u0027color\u0027:\u0027red\u0027}\"\u003eERROR\u003c/i\u003e\n    \u003ca ng-if\u003d\"TERMINAL_SOCKET_STATUS!\u003d\u0027TERMINAL_SOCKET_CONNECT\u0027\" class\u003d\"fa fa-info-circle interpreter-binding-mode-info-link\" aria-hidden\u003d\"true\" tooltip-placement\u003d\"bottom\" uib-tooltip\u003d\"Please run this paragraph again\"\u003e\u003c/a\u003e\n\n    \u003c!--button class\u003d\"btn btn-default btn-xs\" style\u003d\"margin-left:40px;\"\n      ng-click\u003d\"\" tooltip-placement\u003d\"top\" uib-tooltip\u003d\"upload file to host\"\u003e\u003cspan class\u003d\"icon-plus shortcut-icon\"\u003e\u003c/span\u003e Upload File\n    \u003c/button\u003e\n    \u003cbutton class\u003d\"btn btn-default btn-xs\" style\u003d\"margin-left:4px;\"\n      ng-click\u003d\"\" tooltip-placement\u003d\"top\" uib-tooltip\u003d\"download file from host\"\u003e \u003cspan class\u003d\"icon-arrow-down shortcut-icon\"\u003e\u003c/span\u003e Download File\n    \u003c/button--\u003e\n\n  \u003c/div\u003e\n\u003c/div\u003e\n\n\u003chr style\u003d\"margin-top: 10px; margin-bottom: 10px;\"/\u003e\n\n\u003cform style\u003d\"width:100%\"\u003e\n  \u003ciframe src\u003d\"http://0.0.0.0:50143?noteId\u003d2E6SSZK4P\u0026paragraphId\u003dparagraph_1561714783035_-1767220570\u0026t\u003d1562318708191\" height\u003d\"400\" width\u003d\"100%\" frameborder\u003d\"0\" scrolling\u003d\"0\"\u003e\u003c/iframe\u003e\n\u003c/form\u003e\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1561714783035_-1767220570",
      "id": "paragraph_1561714783035_-1767220570",
      "dateCreated": "2019-06-28 17:39:43.038",
      "dateStarted": "2019-07-05 17:25:08.182",
      "dateFinished": "2019-07-05 17:25:08.204",
      "status": "FINISHED"
    },
    {
      "text": "%spark\n",
      "user": "user1",
      "dateUpdated": "2019-04-11 13:24:59.926",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1554960299926_-1458586342",
      "id": "paragraph_1554960299926_-1458586342",
      "dateCreated": "2019-04-11 13:24:59.926",
      "status": "READY"
    }
  ],
  "name": "Bokeh Tutorial",
  "id": "2E6SSZK4P",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-SNAPSHOT",
  "permissions": {
    "owners": [],
    "runners": [],
    "readers": [],
    "writers": []
  },
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {
    "isRunning": false
  },
  "path": "/Bokeh Tutorial"
}